<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HuangYong Blog</title>
  <subtitle>新的开始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="ty52u.cn/"/>
  <updated>2016-07-18T08:58:53.019Z</updated>
  <id>ty52u.cn/</id>
  
  <author>
    <name>huangyong</name>
    <email>hy873872182@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8.React-Native之ScrollView组件学习</title>
    <link href="ty52u.cn/2016/07/18/React-Native/8-React-Native%E4%B9%8BScrollView%E7%BB%84%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/18/React-Native/8-React-Native之ScrollView组件学习/</id>
    <published>2016-07-18T07:14:49.000Z</published>
    <updated>2016-07-18T08:58:53.019Z</updated>
    
    <content type="html">&lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native专题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-ScrollView组件的介绍&quot;&gt;&lt;a href=&quot;#1-ScrollView组件的介绍&quot; class=&quot;headerlink&quot; title=&quot;1.ScrollView组件的介绍&quot;&gt;&lt;/a&gt;1.ScrollView组件的介绍&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ScrollView&lt;/code&gt;组件封装了Android平台的ScrollView组件(滚动视图)，并且提供触摸事件&lt;code&gt;responder&lt;/code&gt;系统功能。在使用 &lt;code&gt;ScrollView&lt;/code&gt;的时候我们必须要确保该有一个固定的高度，因为该组件包含很多不固定高度的字符控件装入到固定的容器中(通过滑动交互),如果给&lt;code&gt;ScrollView&lt;/code&gt;设置高度，要么我们直接给该&lt;code&gt;ScrollView&lt;/code&gt;进行设置高度(不建议使用该方法)，要么就是该&lt;code&gt;ScrollView&lt;/code&gt;的父控件设置相关高度，使用第二种方法视图任意位置中是不能忘记&lt;code&gt;{flex：1}&lt;/code&gt;，不然不会有效果的。&lt;br&gt;下面我们来看看官方实例:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Sample React Native App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * https://github.com/facebook/react-native&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @flow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123; Component &amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScrollView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TouchableOpacity,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var NUM_ITEMS = 20;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppScrollView extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    makeItems(nItems: number, styles)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        var items = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        for (var i = 0; i &amp;lt; nItems; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            items[i] = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;TouchableOpacity key=&amp;#123;i&amp;#125; style=&amp;#123;styles&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text&amp;gt;&amp;#123;&amp;apos;Item &amp;apos; + i&amp;#125;&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/TouchableOpacity&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return items;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // One of the items is a horizontal scroll view&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var items = this.makeItems(NUM_ITEMS, styles.itemWrapper);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      items[4] = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;ScrollView key=&amp;#123;&amp;apos;scrollView&amp;apos;&amp;#125; horizontal=&amp;#123;true&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#123;this.makeItems(NUM_ITEMS, [styles.itemWrapper, styles.horizontalItemWrapper])&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/ScrollView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var verticalScrollView = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;ScrollView style=&amp;#123;styles.verticalScrollView&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              &amp;#123;items&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/ScrollView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      return verticalScrollView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  verticalScrollView:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      margin:10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemWrapper:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backgroundColor:&amp;apos;#dddddd&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alignItems:&amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        borderRadius:5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        borderWidth: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        borderColor: &amp;apos;#a52a2a&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding:30,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin:5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    horizontalItemWrapper:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        padding:50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppScrollView&amp;apos;, () =&amp;gt; RNAppScrollView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行后看到的效果如下图:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1815-56-34.png&quot;&gt;&lt;br&gt;注意查看右侧的阴影滚动条和水平方向，垂直方向的滑动&lt;/p&gt;
&lt;h3 id=&quot;2-基本的额属性方法&quot;&gt;&lt;a href=&quot;#2-基本的额属性方法&quot; class=&quot;headerlink&quot; title=&quot;2.基本的额属性方法&quot;&gt;&lt;/a&gt;2.基本的额属性方法&lt;/h3&gt;&lt;p&gt;1.继承自View相关的属性样式(宽和高,背景颜色,边距等相关属性样式)&lt;br&gt;2.contentContainerStyle 样式风格属性(传入StyleSheet创建Style文件)该样式会作用于被ScrollView包裹的所有的子视图如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;ScrollView contentContainerStyle = &amp;#123;styles.contentContainer&amp;#125;&amp;gt;&amp;lt;/ScrollView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contentContainer:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      paddingVertical:20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3.horizontal 表示ScrollView是横向滑动还是纵向滑动，该值默认为false 表示纵向滑动&lt;br&gt;4.keyBoardDismissMode 枚举类型表示键盘隐藏类型，可选(‘none’,’on-drag’，’interactive’)三个值的意思分别如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; 默认值，表示在进行拖拽滑动的时候步隐藏键盘&lt;/li&gt;
&lt;li&gt;&lt;code&gt;interactive&lt;/code&gt; 表示在拖拽触摸移动的同时隐藏键盘，向上拖拽的时候取消隐藏，(在android平台上面部支持该选项，所以会和none的效果一样)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on-drag&lt;/code&gt; 表示在进行拖拽滑动开始的时候隐藏键盘&lt;br&gt;5.keyboardshouldPersistTaps 该属性默认为&lt;code&gt;false&lt;/code&gt;，表示如果当前是textinput控件并且键盘是弹出状态的话，点击textinput之外的其他地方键盘就会隐藏，反之不会有效果，键盘还是打开状态。&lt;br&gt;6.onContentSizeChange function 该滚动视图的内容尺寸大小发生变化的时候进行调用&lt;br&gt;7.onScroll function 该方法在滚动的时候每frame(帧)调用一次，该方法事件的调用频率可以使用scrollEventThrottle 属性进行设置&lt;br&gt;8.refreshControl element 设置元素控件，可以进行指定RefreshControl 组件，这样可以为ScrollView 添加&lt;code&gt;下拉刷新的功能&lt;/code&gt;。&lt;br&gt;9.removeClippedSubviews 测试属性，当该值为 true的时候在ScrollView视图之外的视图(该视图的overflow属性值必须要为&lt;code&gt;hidden&lt;/code&gt;)会从被暂停是移除，该设置可以提高滚动的性能&lt;br&gt;10.showsHorizontalScrollIndicator 该值设置是否需要显示横向滚动指示条&lt;br&gt;11.showsVerticalScrollIndicator 该值设置是否需要显示纵向滚动指示条&lt;br&gt;12.sendMomentumEvents 当ScrollView有onMonentumScrollBegin或是onMomentumScrollEnd方法设置，该sendMomentumEvents 值设置为true 的时候，变化的事件信息会通过该android框架自动发送出来，然后被之前设置的方法进行捕捉。&lt;br&gt;还有很多属性是基于iOS的，这里需要自己去查看&lt;a href=&quot;http://facebook.github.io/react-native/docs/scrollview.html#content&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-使用实例&quot;&gt;&lt;a href=&quot;#3-使用实例&quot; class=&quot;headerlink&quot; title=&quot;3.使用实例&quot;&gt;&lt;/a&gt;3.使用实例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123; Component &amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ScrollView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TouchableOpacity,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppScrollView extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;View style = &amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;Text style=&amp;#123;styles.welcome&amp;#125;&amp;gt; 进行测试ScrollView控件&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;ScrollView showsVerticalScrollIndicator=&amp;#123;true&amp;#125; contentContainerStyle=&amp;#123;styles.contentContainer&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;#fff&amp;apos;, margin:5, fontSize:16, backgroundColor:&amp;apos;#43CD80&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       React-Native之DrawerLayoutAndroid控件学习&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                       ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;lt;/ScrollView&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height: 300,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        justifyContent: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alignItems: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backgroundColor: &amp;apos;#f5fcff&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    contentContainer:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin:10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;yellow&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backgroundColor: &amp;apos;#ff0000&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppScrollView&amp;apos;, () =&amp;gt; RNAppScrollView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后的效果如下图：&lt;br&gt;&lt;img src=&quot;/images/2016-07-1816-57-39.png&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Na
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="ScrollView" scheme="ty52u.cn/tags/ScrollView/"/>
    
  </entry>
  
  <entry>
    <title>7.React-Native之DrawerLayoutAndroid控件学习</title>
    <link href="ty52u.cn/2016/07/18/React-Native/7-React-Native%E4%B9%8BDrawerLayoutAndroid%E6%8E%A7%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/18/React-Native/7-React-Native之DrawerLayoutAndroid控件学习/</id>
    <published>2016-07-18T02:43:00.000Z</published>
    <updated>2016-07-18T07:11:28.087Z</updated>
    
    <content type="html">&lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native专题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-DrawerLayoutAndroid组件是对Android-平台的DrawerLayout控件的封装&quot;&gt;&lt;a href=&quot;#1-DrawerLayoutAndroid组件是对Android-平台的DrawerLayout控件的封装&quot; class=&quot;headerlink&quot; title=&quot;1.DrawerLayoutAndroid组件是对Android 平台的DrawerLayout控件的封装&quot;&gt;&lt;/a&gt;1.&lt;code&gt;DrawerLayoutAndroid&lt;/code&gt;组件是对Android 平台的&lt;code&gt;DrawerLayout&lt;/code&gt;控件的封装&lt;/h3&gt;&lt;p&gt;&lt;code&gt;DrawerLayoutAndroid&lt;/code&gt;组件是对Android 平台的&lt;code&gt;DrawerLayout&lt;/code&gt;控件的封装，这个抽屉页面经常用于导航页面，通过renderNavigationView进行渲染，&lt;code&gt;DrawerLayoutAndroid&lt;/code&gt;中的子视图会变成主视图.导航栏的视图在屏幕中一开始是隐藏的，但我们可以通过drawerPostition指定位置进行把导航视图拖拽出来，最终拖拽出来的距离大小可以使用drawWidth属性进行指定。&lt;br&gt;该控件试用起来比较简单，只需要熟悉一下其中的属性和方法即可，下面是一个官方的实例:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var navigatiobView = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;View style = &amp;#123;&amp;#123;flex:1, backgroundColor:&amp;apos;#fff&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, fontSize: 15, textAlign:&amp;apos;left&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            I&amp;apos;m in the Drawer !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;DrawerLayoutAndroid drawerWidth = &amp;#123;300&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawerPosition = &amp;#123;DrawerLayoutAndroid.positions.Left&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          renderNavigationView = &amp;#123;() =&amp;gt; navigatiobView&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;View style=&amp;#123;&amp;#123;flex:1,alignItems:&amp;apos;center&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, fontSize:15,textAlign: &amp;apos;right&amp;apos;&amp;#125;&amp;#125;&amp;gt;Hello&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, fontSize:15,textAlign:&amp;apos;right&amp;apos;&amp;#125;&amp;#125;&amp;gt;World !&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/DrawerLayoutAndroid&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行后看到的效果如下图所示:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1811-44-17.png&quot;&gt;&lt;br&gt;在屏幕上用手指从屏幕边缘从左到右滑动之后看到的效果如下:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1811-45-54.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-基本属性方法&quot;&gt;&lt;a href=&quot;#2-基本属性方法&quot; class=&quot;headerlink&quot; title=&quot;2.基本属性方法&quot;&gt;&lt;/a&gt;2.基本属性方法&lt;/h3&gt;&lt;p&gt;1.继承View控件的属性(宽和高,背景颜色,边距等相关属性样式)&lt;br&gt;2.&lt;code&gt;drawerPosition&lt;/code&gt; 参数为枚举类型(&lt;code&gt;DrawerConsts. DrawerPosition.Left&lt;/code&gt;,&lt;code&gt;DrawerConsts.DrawerPosition.Right&lt;/code&gt;),进行指定导航菜单用哪一侧滑行出来，更具官方实例，最终传入的两个枚举值分别为:&lt;code&gt;DrawerLayoutAndroid.positioons.Left&lt;/code&gt;和&lt;code&gt;DrawerLayoutAndroid.positioons.Right&lt;/code&gt;&lt;br&gt;3.&lt;code&gt;drawerWidth&lt;/code&gt; 进行指定导航菜单视图的宽度，也就是说该侧面导航视图可以从屏幕边缘拖拽到屏幕的宽度距离&lt;br&gt;4.&lt;code&gt;keyboardDismissMode&lt;/code&gt; 参数为枚举类型(‘none’,’on-drag’)进行指定在导航视图拖拽的过程中是否要隐藏键盘:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; 不隐藏键盘(默认)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;on-drag&lt;/code&gt; 当拖拽开始的时候进行隐藏键盘&lt;br&gt;5.&lt;code&gt;onDrawerClose&lt;/code&gt; function 方法当导航视图被关闭后进行回调方法&lt;br&gt;6.&lt;code&gt;onDrawerOpen&lt;/code&gt; function 方法 当导航视图被打开后进行回调该方法&lt;br&gt;7.&lt;code&gt;onDrawerSlide&lt;/code&gt; function 方法 当导航视图和用户进行交互时候调用该方法&lt;br&gt;8.&lt;code&gt;onDrawerStateChanged&lt;/code&gt; function 方法，当导航视图状态发生变化的时候调用该方法，该方法会有三种状态:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;idle(空闲)&lt;/code&gt; 表示导航视图上面没有任何交互状态&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dragging(正在拖拽中)&lt;/code&gt; 表示该用户正在和导航视图发生交互动作&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setting(暂停-刚刚结束)&lt;/code&gt;表示用户 刚刚结束和导航视图的交互动作，当前导航视图正在打开或者正常关闭拖拽滑动动画效果&lt;br&gt;9.&lt;code&gt;renderNavigationView&lt;/code&gt; function 方法，该方法进行渲染一个导航抽屉视图(用于用户从屏幕边缘拖拽出来)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-DrawerLayoutAndroid-使用实例&quot;&gt;&lt;a href=&quot;#3-DrawerLayoutAndroid-使用实例&quot; class=&quot;headerlink&quot; title=&quot;3.DrawerLayoutAndroid 使用实例&quot;&gt;&lt;/a&gt;3.DrawerLayoutAndroid 使用实例&lt;/h3&gt;&lt;p&gt;代码如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Sample React Native App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * https://github.com/facebook/react-native&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @flow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123; Component &amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  DrawerLayoutAndroid&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppDrawerLayout extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var navigatiobView = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;View style = &amp;#123;&amp;#123;flex:3, backgroundColor:&amp;apos;green&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, fontSize: 15,color:&amp;apos;red&amp;apos;, textAlign:&amp;apos;center&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            导航功能标题栏&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, marginLeft: 20, fontSize: 15, color:&amp;apos;#fff&amp;apos;,textAlign:&amp;apos;left&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            1.功能一&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;Text style=&amp;#123;&amp;#123;margin:10,marginLeft: 20, fontSize: 15, color:&amp;apos;#fff&amp;apos;, textAlign:&amp;apos;left&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            2.功能二&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;DrawerLayoutAndroid drawerWidth = &amp;#123;150&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          drawerPosition = &amp;#123;DrawerLayoutAndroid.positions.Left&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          renderNavigationView = &amp;#123;() =&amp;gt; navigatiobView&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;View style=&amp;#123;&amp;#123;flex:1,alignItems:&amp;apos;center&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text style=&amp;#123;&amp;#123;margin:10, fontSize:15,textAlign: &amp;apos;right&amp;apos;&amp;#125;&amp;#125;&amp;gt;主布局界面内容&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &amp;lt;/DrawerLayoutAndroid&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppDrawerLayout&amp;apos;, () =&amp;gt; RNAppDrawerLayout);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行后能看到的效果如下:&lt;br&gt;1.主页面&lt;br&gt;&lt;img src=&quot;/images/2016-07-1815-10-32.png&quot;&gt;&lt;br&gt;2.导航栏&lt;br&gt;&lt;img src=&quot;/images/2016-07-1815-10-15.png&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Na
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="DrawerLayoutAndroid" scheme="ty52u.cn/tags/DrawerLayoutAndroid/"/>
    
  </entry>
  
  <entry>
    <title>6.React-Native之ProgressBar控件学习</title>
    <link href="ty52u.cn/2016/07/18/React-Native/6-React-Native%E4%B9%8BProgressBar%E6%8E%A7%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/18/React-Native/6-React-Native之ProgressBar控件学习/</id>
    <published>2016-07-18T01:25:03.000Z</published>
    <updated>2016-07-18T02:43:19.468Z</updated>
    
    <content type="html">&lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native专题&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-ProgressBarAndroid是一个Android-的进度信息控件。&quot;&gt;&lt;a href=&quot;#1-ProgressBarAndroid是一个Android-的进度信息控件。&quot; class=&quot;headerlink&quot; title=&quot;1.ProgressBarAndroid是一个Android 的进度信息控件。&quot;&gt;&lt;/a&gt;1.&lt;code&gt;ProgressBarAndroid&lt;/code&gt;是一个Android 的进度信息控件。&lt;/h3&gt;&lt;p&gt;&lt;code&gt;ProgressBarAndroid&lt;/code&gt; 的React组件封装了Android平台的Progress控件，下采用ProgressBarAndroid来实现一个最简单的例子，&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View &amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ProgressBarAndroid控件实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;ProgressBarAndroid styleAttr=&amp;apos;Inverse&amp;apos;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/View&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在运运行前还需要先‘引进&lt;code&gt;ProgressBarAndroid&lt;/code&gt;组件，运行后实现的效果如下图：&lt;br&gt;&lt;img src=&quot;/images/2016-07-1810-09-35.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-属性方法&quot;&gt;&lt;a href=&quot;#2-属性方法&quot; class=&quot;headerlink&quot; title=&quot;2.属性方法&quot;&gt;&lt;/a&gt;2.属性方法&lt;/h3&gt;&lt;p&gt;1.支持View组件的属性方法(继承自View组件)，例如：大小，布局，边距&lt;br&gt;2.color设置进度的颜色属性值&lt;br&gt;3.indeterminate 设置是否要显示一个默认的进度信息，&lt;code&gt;注意&lt;/code&gt;如果styleAttr的风格设置成Horizontal(水平)的时候该值必须设置成&lt;code&gt;false&lt;/code&gt;。&lt;br&gt;4.progress number设置当前的加载进度值(0-1之间)&lt;br&gt;5.styleAttr 进度条框的风格，可以取的值如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Horizontal&lt;/code&gt; (水平)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Small&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Large&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Inverse&lt;/code&gt; (逆)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;SmallInverse&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LargeInverse&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;ProgressBarAndroid使用实例&quot;&gt;&lt;a href=&quot;#ProgressBarAndroid使用实例&quot; class=&quot;headerlink&quot; title=&quot;ProgressBarAndroid使用实例&quot;&gt;&lt;/a&gt;ProgressBarAndroid使用实例&lt;/h3&gt;&lt;p&gt;使用上面的各种风格来实现效果，具体如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Sample React Native App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * https://github.com/facebook/react-native&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @flow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123; Component &amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ProgressBarAndroid,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppProgressBar extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ProgressBarAndroid 控件的各种实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;ProgressBarAndroid color=&amp;apos;red&amp;apos; styleAttr = &amp;apos;Inverse&amp;apos;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;ProgressBarAndroid color=&amp;apos;green&amp;apos; styleAttr = &amp;apos;Horizontal&amp;apos; progress = &amp;#123;0.7&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            indeterminate = &amp;#123;false&amp;#125; style = &amp;#123;&amp;#123;marginTop: 10&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;ProgressBarAndroid color = &amp;apos;blue&amp;apos; styleAttr = &amp;apos;Horizontal&amp;apos; indeterminate = &amp;#123;true&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                style=&amp;#123;&amp;#123;marginTop:10&amp;#125;&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;ProgressBarAndroid color = &amp;apos;black&amp;apos; styleAttr=&amp;apos;SmallInverse&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                style=&amp;#123;&amp;#123;marginTop:10&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;ProgressBarAndroid styleAttr = &amp;quot;LargeInverse&amp;quot; style=&amp;#123;&amp;#123;marginTop: 10&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppProgressBar&amp;apos;, () =&amp;gt; RNAppProgressBar);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最后运行实现的效果如下:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1810-39-44.png&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Na
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="ProgressBarAndroid" scheme="ty52u.cn/tags/ProgressBarAndroid/"/>
    
  </entry>
  
  <entry>
    <title>5.React-Native之Image控件学习</title>
    <link href="ty52u.cn/2016/07/15/React-Native/5-React-Native%E4%B9%8BImage%E6%8E%A7%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/15/React-Native/5-React-Native之Image控件学习/</id>
    <published>2016-07-15T09:09:13.000Z</published>
    <updated>2016-07-15T09:59:43.994Z</updated>
    
    <content type="html">&lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Native专题&lt;/a&gt;&lt;br&gt;和之前一样我们先初始化一个项目&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ react-native init RNAppImage&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-Image基本用法&quot;&gt;&lt;a href=&quot;#1-Image基本用法&quot; class=&quot;headerlink&quot; title=&quot;1.Image基本用法&quot;&gt;&lt;/a&gt;1.Image基本用法&lt;/h3&gt;&lt;p&gt;项目创建好之后我们先简单的修改下 &lt;code&gt;index.android.js&lt;/code&gt;文件如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View style = &amp;#123;&amp;#123;marginLeft: 10, marginTop: 10&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Text style = &amp;#123;&amp;#123;fontSize: 16&amp;#125;&amp;#125;&amp;gt;test demo&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;Image source = &amp;#123;require(&amp;apos;./img/my_icon.png&amp;apos;)&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行之后得到结果如下&lt;br&gt;&lt;img src=&quot;/images/2016-07-1517-20-50.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;该图片资源的查找和js模块相似，根据填写的图片路径相对于当前的js文件来进行收索，React-Native会根据平台选择的相应文件 例如:my_icon.ios.png和my_icon.android.png两个文件(命名方式android或者ios)。该会根据android或者ios平台选择相应的文件。&lt;br&gt;注意这边使用的&lt;code&gt;Image&lt;/code&gt;组件中的&lt;code&gt;require&lt;/code&gt;中的图片名称必须为一个静态的字符串信息.不能在require中进行拼接如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Image source = &amp;#123;require(&amp;apos;./imgmy_icon&amp;apos; + &amp;apos;.png&amp;apos;)&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这中写法是会报错的。&lt;/p&gt;
&lt;h3 id=&quot;2-加载使用APP中的图片&quot;&gt;&lt;a href=&quot;#2-加载使用APP中的图片&quot; class=&quot;headerlink&quot; title=&quot;2.加载使用APP中的图片&quot;&gt;&lt;/a&gt;2.加载使用APP中的图片&lt;/h3&gt;&lt;p&gt;React-Native允许开发者在React-Native项目中使用原生代码开发，也可以使用已经打包在app中的图片资源。如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Image source = &amp;#123;&amp;#123;uri:&amp;apos;ic_launcher&amp;apos;&amp;#125;&amp;#125; style = &amp;#123;&amp;#123;width: 80, height: 80&amp;#125;&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-加载网络图片&quot;&gt;&lt;a href=&quot;#3-加载网络图片&quot; class=&quot;headerlink&quot; title=&quot;3.加载网络图片&quot;&gt;&lt;/a&gt;3.加载网络图片&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Image source=&amp;#123;&amp;#123;uri:&amp;apos;https://d13yacurqjgara.cloudfront.net/users/845817/screenshots/2837728/pikachu_by_adriana_depta.png&amp;apos;&amp;#125;&amp;#125; style=&amp;#123;&amp;#123;width: 160, height: 160&amp;#125;&amp;#125;&amp;gt;&amp;lt;/Image&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;4-Image实现某些控件的背景图效果&quot;&gt;&lt;a href=&quot;#4-Image实现某些控件的背景图效果&quot; class=&quot;headerlink&quot; title=&quot;4.Image实现某些控件的背景图效果&quot;&gt;&lt;/a&gt;4.Image实现某些控件的背景图效果&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Image source=&amp;#123;&amp;#123;uri:&amp;apos;https://d13yacurqjgara.cloudfront.net/users/845817/screenshots/2837728/pikachu_by_adriana_depta.png&amp;apos;&amp;#125;&amp;#125; style=&amp;#123;&amp;#123;width: 160, height: 160&amp;#125;&amp;#125;&amp;gt;&amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;green&amp;apos;&amp;#125;&amp;#125;&amp;gt;这是从网络上加载的图片&amp;lt;/Text&amp;gt;&amp;lt;/Image&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后的效果图如下:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1517-43-41.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-Image的一些属性方法&quot;&gt;&lt;a href=&quot;#5-Image的一些属性方法&quot; class=&quot;headerlink&quot; title=&quot;5.Image的一些属性方法&quot;&gt;&lt;/a&gt;5.Image的一些属性方法&lt;/h3&gt;&lt;p&gt;1.onLayout   (function) 当Image布局发生改变的，会进行调用该方法，调用的代码为:&lt;br&gt;{nativeEvent: {layout: {x, y, width, height}}}.&lt;br&gt;2.onLoad (function):当图片加载成功之后，回调该方法&lt;br&gt;3.onLoadEnd (function):当图片加载失败回调该方法，不管图片加载成功还是失败&lt;br&gt;4.onLoadStart (fcuntion):当图片开始加载的时候调用该方法&lt;br&gt;5.resizeMode  缩放比例,可选参数(‘cover’, ‘contain’, ‘stretch’) 该当图片的尺寸超过布局的尺寸的时候，会根据设置Mode进行缩放或者裁剪图片&lt;br&gt;6.source {uri:string} 进行标记图片的引用，该参数可以为一个网络url地址或者一个本地的路径&lt;/p&gt;
&lt;h3 id=&quot;6-Image的样式&quot;&gt;&lt;a href=&quot;#6-Image的样式&quot; class=&quot;headerlink&quot; title=&quot;6.Image的样式&quot;&gt;&lt;/a&gt;6.Image的样式&lt;/h3&gt;&lt;p&gt;1.FlexBox         支持弹性盒子风格&lt;br&gt;2.Transforms      支持属性动画&lt;br&gt;3.resizeMode      设置缩放模式&lt;br&gt;4.backgroundColor 背景颜色&lt;br&gt;5.borderColor     边框颜色&lt;br&gt;6.borderWidth     边框宽度&lt;br&gt;7.borderRadius    边框圆角&lt;br&gt;8.overflow        设置图片尺寸超过容器可以设置显示或者隐藏(‘visible’,’hidden’)&lt;br&gt;9.tintColor       颜色设置&lt;br&gt;10.opacity        设置不透明度0.0(透明)-1.0(完全不透明)&lt;/p&gt;
&lt;h3 id=&quot;7-Image实例-仿照美团首页顶部分类&quot;&gt;&lt;a href=&quot;#7-Image实例-仿照美团首页顶部分类&quot; class=&quot;headerlink&quot; title=&quot;7.Image实例-仿照美团首页顶部分类&quot;&gt;&lt;/a&gt;7.Image实例-仿照美团首页顶部分类&lt;/h3&gt;&lt;p&gt;直接上代码吧&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * Sample React Native App&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * https://github.com/facebook/react-native&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @flow&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;Component&amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Image&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppImage extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View style=&amp;#123;&amp;#123;marginLeft: 5, marginTop: 10, marginRight: 5&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View style=&amp;#123;&amp;#123;flexDirection: &amp;apos;row&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/one.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;美食&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/two.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;美食&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/three.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;酒店&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/four.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;KTV&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/five.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;外卖&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View style=&amp;#123;&amp;#123;flexDirection: &amp;apos;row&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/six.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;优惠买单&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/seven.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;周边游&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/eight.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;休闲娱乐&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/nine.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;今日新单&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;View style=&amp;#123;&amp;#123;width: 70&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Image source=&amp;#123;require(&amp;apos;./img/ten.png&amp;apos;)&amp;#125; style=&amp;#123;&amp;#123;alignSelf: &amp;apos;center&amp;apos;, width: 45, height: 45&amp;#125;&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;marginTop: 5, textAlign: &amp;apos;center&amp;apos;, fontSize: 11, color:&amp;apos;#555555&amp;apos;&amp;#125;&amp;#125;&amp;gt;丽人&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppImage&amp;apos;, () =&amp;gt; RNAppImage);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行后看到的效果图如下:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1517-54-51.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;图片下载地址&lt;/code&gt;:链接: &lt;a href=&quot;http://pan.baidu.com/s/1kUKJ64Z&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pan.baidu.com/s/1kUKJ64Z&lt;/a&gt; 密码: 9p3q&lt;/p&gt;
&lt;p&gt;&lt;code&gt;再次声明&lt;/code&gt;:本文是参考 &lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt;的 &lt;code&gt;&lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native系列文章&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文查考&lt;code&gt;From Sky丶清（http://www.lcode.org/）&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React Na
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="Text" scheme="ty52u.cn/tags/Text/"/>
    
  </entry>
  
  <entry>
    <title>4.React-Native之Text控件学习</title>
    <link href="ty52u.cn/2016/07/14/React-Native/4-React-Native%E4%B9%8BText%E6%8E%A7%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/14/React-Native/4-React-Native之Text控件学习/</id>
    <published>2016-07-14T06:54:19.000Z</published>
    <updated>2016-07-14T09:32:43.929Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btext%E7%BB%84%E4%BB%B6%E8%AE%B2%E8%A7%A3/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;本文参考江清清的React-Native系列文章&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;Text-组件的嵌套使用&quot;&gt;&lt;a href=&quot;#Text-组件的嵌套使用&quot; class=&quot;headerlink&quot; title=&quot;Text 组件的嵌套使用&quot;&gt;&lt;/a&gt;Text 组件的嵌套使用&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Text&lt;/code&gt; 组件和&lt;code&gt;View&lt;/code&gt;组件一样都是&lt;code&gt;React-Native&lt;/code&gt; 的基本组件，它对应的是android里的&lt;code&gt;TextView&lt;/code&gt;,出来能实现基本的布局还可以进行嵌套显示，如下代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;Component&amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    AppRegistry, Text, StyleSheet&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppView extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;Text style=&amp;#123;styles.titleBase&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                I am root text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Text style=&amp;#123;styles.title&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    I am chid text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    titleBase: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin:10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textAlign: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;red&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontSize: 28,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontFamily: &amp;apos;Cochin&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;green&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontWeight: &amp;apos;bold&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppView&amp;apos;, () =&amp;gt; RNAppView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;运行后在手机上的效果如图所示:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1416-04-50.png&quot;&gt;&lt;br&gt;这就是采用了简单的Text嵌套完成的样式。&lt;/p&gt;
&lt;h3 id=&quot;2-Text-组件基本属性方法&quot;&gt;&lt;a href=&quot;#2-Text-组件基本属性方法&quot; class=&quot;headerlink&quot; title=&quot;2.Text 组件基本属性方法&quot;&gt;&lt;/a&gt;2.Text 组件基本属性方法&lt;/h3&gt;&lt;p&gt; 1.&lt;code&gt;allowFontScaling(bool)&lt;/code&gt;: 控制字体是否根据IOS的设置进行自动缩放-iOS平台,Android平台不适用&lt;br&gt; 2.&lt;code&gt;numberOfLines (number)&lt;/code&gt;:进行设置Text显示文本的行数，如果显示的内容超过了行数，默认其他多余的信息就不会显示了&lt;br&gt; 3.&lt;code&gt;onLayout (function)&lt;/code&gt;：当布局位置发生变动的时候自动进行触发该方法, 其中该function的参数如下:&lt;br&gt; [code lang=”” start=”” highlight=””]{nativeEvent: {layout: {x, y, width, height}}}[/code]&lt;br&gt; 4.&lt;code&gt;onPress (fcuntion)&lt;/code&gt;:该方法当文本发生点击的时候调用该方法&lt;/p&gt;
&lt;h3 id=&quot;3-Text-样式设置-style&quot;&gt;&lt;a href=&quot;#3-Text-样式设置-style&quot; class=&quot;headerlink&quot; title=&quot;3.Text 样式设置(style)&quot;&gt;&lt;/a&gt;3.Text 样式设置(style)&lt;/h3&gt;&lt;p&gt;  1.继承可以使用View组件的所有Style，&lt;a href=&quot;http://facebook.github.io/react-native/docs/view.html#style&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;具体查看官方文档&lt;/a&gt;&lt;br&gt;  2.color:字体颜色&lt;br&gt;  3.fontFamily:字体名称&lt;br&gt;  4.fontSize:字体大小&lt;br&gt;  5.fontStyle:字体风格((normal,italic)&lt;br&gt;  6.fontWeight:字体的粗细权重(“normal”, ‘bold’, ‘100’, ‘200’, ‘300’, ‘400’, ‘500’, ‘600’, ‘700’, ‘800’, ‘900’)&lt;br&gt;  7.textShadowOffset:设置阴影效果{width: number,height:number}&lt;br&gt;  8.textShadowRadius: 阴影效果圆角&lt;br&gt;  9.textShadowColor:音乐效果的颜色&lt;br&gt;  10.letterSpacing:字符间距&lt;br&gt;  11.lineHeight:行高&lt;br&gt;  12.textAlign:文本对齐方式(“auto”, ‘left’, ‘right’, ‘center’, ‘justify’)&lt;br&gt;  13.textDecorationLine:横线位置((“none”, ‘underline’, ‘line-through’, ‘underline line-through’)&lt;br&gt;  14.textDecorationStyle:线的风格(“solid”, ‘double’, ‘dotted’, ‘dashed’)&lt;br&gt;  15.textDecorationColor:线的颜色&lt;br&gt;  16.writingDirection 文本方向(“auto”, ‘ltr’, ‘rtl’)&lt;/p&gt;
&lt;h3 id=&quot;Text-嵌套需要注意的地方&quot;&gt;&lt;a href=&quot;#Text-嵌套需要注意的地方&quot; class=&quot;headerlink&quot; title=&quot;Text 嵌套需要注意的地方&quot;&gt;&lt;/a&gt;Text 嵌套需要注意的地方&lt;/h3&gt;&lt;p&gt;相同的属性文本可以用父标签进行包裹，然后内部特殊的地方采用标签方案如下例子:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;Component&amp;#125; from &amp;quot;react&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;AppRegistry, Text, StyleSheet, View&amp;#125; from &amp;quot;react-native&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppView extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;styles.titleBase&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        I am root text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;styles.title&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            I am chid text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;fontWeight: &amp;apos;bold&amp;apos;, fontSize: 28&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        I am bold&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;     and red&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    titleBase: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textAlign: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;red&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontSize: 28,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontFamily: &amp;apos;Cochin&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;green&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontWeight: &amp;apos;bold&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppView&amp;apos;, () =&amp;gt; RNAppView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行效果如下图所示&lt;br&gt;&lt;img src=&quot;/images/2016-07-1416-43-42.png&quot;&gt;&lt;br&gt;在布局方面的规则很重要，如前面说的&lt;code&gt;View&lt;/code&gt;组件支持FlexBox(弹性布局),但是Text 组件只是文本布局，就是说只会横向布局，如果到了文本的末尾就只有换行，如下代码:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View style=&amp;#123;&amp;#123;borderWidth:1,borderStyle: &amp;apos;dashed&amp;apos;,borderColor: &amp;apos;blue&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Text style=&amp;#123;&amp;#123;fontWeight: &amp;apos;bold&amp;apos;, fontSize: 28&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        水平分布  I am bold&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;     and red&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果父节点是采用&lt;code&gt;View&lt;/code&gt;，那就能实现纵向布局&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View style=&amp;#123;&amp;#123;borderWidth:1,borderStyle: &amp;apos;dotted&amp;apos;,borderColor: &amp;apos;green&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Text style=&amp;#123;&amp;#123;fontWeight: &amp;apos;bold&amp;apos;, fontSize: 28&amp;#125;&amp;#125;&amp;gt; 垂直分布 I am bold&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;     and red&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行后的效果如下图所示:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1417-06-42.png&quot;&gt;&lt;br&gt;从上面的例子中可以看出组件可以嵌套，而且样式还支持继承，也就是说父组件定义的样式，子组件没有重写颜色之前是可以继承福组件的样式的。&lt;/p&gt;
&lt;h3 id=&quot;Text-的具体实例&quot;&gt;&lt;a href=&quot;#Text-的具体实例&quot; class=&quot;headerlink&quot; title=&quot;Text 的具体实例&quot;&gt;&lt;/a&gt;Text 的具体实例&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 简单的Text 组件使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;use strict&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;Component&amp;#125; from &amp;quot;react&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;AppRegistry, Text, StyleSheet, View&amp;#125; from &amp;quot;react-native&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppView extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;styles.titleBase&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        I am root text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;styles.title&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            I am chid text !&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View style=&amp;#123;&amp;#123;borderWidth:1,borderStyle: &amp;apos;dashed&amp;apos;,borderColor: &amp;apos;blue&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;fontWeight: &amp;apos;bold&amp;apos;, fontSize: 28&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        水平分布  I am bold&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;     and red&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View style=&amp;#123;&amp;#123;borderWidth:1,borderStyle: &amp;apos;dotted&amp;apos;,borderColor: &amp;apos;green&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;fontWeight: &amp;apos;bold&amp;apos;, fontSize: 28&amp;#125;&amp;#125;&amp;gt; 垂直分布 I am bold&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;     and red&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;red&amp;apos;&amp;#125;&amp;#125;&amp;gt;这是红色&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;green&amp;apos;, fontSize: 20&amp;#125;&amp;#125;&amp;gt;这是绿色，大小为20&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;green&amp;apos;, fontFamily: &amp;apos;Cochin&amp;apos;&amp;#125;&amp;#125;&amp;gt;这是绿色，字体为Cochin&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;pink&amp;apos;, fontWeight: &amp;apos;blod&amp;apos;&amp;#125;&amp;#125;&amp;gt;这是粉色，字体加粗&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;color: &amp;apos;gray&amp;apos;, fontStyle: &amp;apos;italic&amp;apos;&amp;#125;&amp;#125;&amp;gt;这是灰色，斜字体&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;textAlign: &amp;apos;center&amp;apos;, fontStyle: &amp;apos;italic&amp;apos;&amp;#125;&amp;#125;&amp;gt;居中显示，斜体&amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;textAlign:&amp;apos;center&amp;apos;,fontStyle:&amp;apos;italic&amp;apos;&amp;#125;&amp;#125; numberOfLines=&amp;#123;1&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        测试行数 居中和斜体 ,再多的数据也只会显示一行        再多的数据也只会显示一行   再多的数据也只会显示一行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text style=&amp;#123;&amp;#123;marginLeft:50,marginTop:50,textAlign:&amp;apos;center&amp;apos;,fontStyle:&amp;apos;italic&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        设置文本的间距,居左，居顶部50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;Text numberOfLines=&amp;#123;2&amp;#125; style=&amp;#123;&amp;#123;lineHeight:50,textAlign:&amp;apos;center&amp;apos;,fontStyle:&amp;apos;italic&amp;apos;&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        测试行高 测试行高 测试行高 测试行高 测试行高 测试行高 测试行高 测试行高 测试行高 测试行高 测试行高&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        测试行高 测试行高 测试行高 测试行高 测试行高 测试行高&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;lt;/Text&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    titleBase: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        margin: 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        textAlign: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;red&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontSize: 28,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontFamily: &amp;apos;Cochin&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        color: &amp;apos;green&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        fontWeight: &amp;apos;bold&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppView&amp;apos;, () =&amp;gt; RNAppView);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行后的效果如下:&lt;br&gt;&lt;img src=&quot;/images/2016-07-1417-29-57.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;声明&lt;/code&gt;本文主要是参考了&lt;code&gt;From Sky丶清&lt;/code&gt; 的 &lt;a href=&quot;http://www.lcode.org/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native 系列为文章&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;&lt;a href=&quot;http://www.lcode.org/%E3%80%90react-native%E5%BC%80%E5%8F%91%E3%80%91react-native%E6%8E%A7%E4%BB%B6%E4%B9%8Btext%E7%BB%84%
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="Text" scheme="ty52u.cn/tags/Text/"/>
    
  </entry>
  
  <entry>
    <title>3.React-Native之View控件学习</title>
    <link href="ty52u.cn/2016/07/13/React-Native/3-React-Native%E4%B9%8BView%E6%8E%A7%E4%BB%B6%E5%AD%A6%E4%B9%A0/"/>
    <id>ty52u.cn/2016/07/13/React-Native/3-React-Native之View控件学习/</id>
    <published>2016-07-13T08:40:24.000Z</published>
    <updated>2016-07-14T08:26:17.904Z</updated>
    
    <content type="html">&lt;p&gt;本文的参考资料为:&lt;a href=&quot;http://blog.csdn.net/llew2011/article/details/51068619&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-查看项目中的index-android-js去的代码如下&quot;&gt;&lt;a href=&quot;#1-查看项目中的index-android-js去的代码如下&quot; class=&quot;headerlink&quot; title=&quot;1. 查看项目中的index.android.js去的代码如下:&quot;&gt;&lt;/a&gt;1. 查看项目中的index.android.js去的代码如下:&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Component,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppProject extends Component &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;styles.welcome&amp;#125;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Welcome to React Native!  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;styles.instructions&amp;#125;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          To get started, edit index.android.js  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;Text style=&amp;#123;styles.instructions&amp;#125;&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Shake or press menu button for dev menu  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/Text&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;/View&amp;gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justifyContent: &amp;apos;center&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alignItems: &amp;apos;center&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &amp;apos;#F5FCFF&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  welcome: &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fontSize: 20,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textAlign: &amp;apos;center&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    margin: 10,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  instructions: &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textAlign: &amp;apos;center&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    color: &amp;apos;#333333&amp;apos;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    marginBottom: 5,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppProject&amp;apos;, () =&amp;gt; RNAppProject);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该文件首先通过&lt;code&gt;import&lt;/code&gt;引入了一些&lt;code&gt;React-Native&lt;/code&gt;的组件，在下面定义了一个&lt;code&gt;RNAppProject&lt;/code&gt;类，并且继承了&lt;code&gt;Component(组件)&lt;/code&gt;，在往下看还有个style=StyleSheet.create(),该方法定义了一个全局的样式器。其实了解一点&lt;code&gt;Reactjs&lt;/code&gt;的伙计应该都不难看懂这写代码。&lt;/p&gt;
&lt;h3 id=&quot;2-尝试修改index-android-js-文件&quot;&gt;&lt;a href=&quot;#2-尝试修改index-android-js-文件&quot; class=&quot;headerlink&quot; title=&quot;2.尝试修改index.android.js 文件&quot;&gt;&lt;/a&gt;2.尝试修改index.android.js 文件&lt;/h3&gt;&lt;p&gt;下面我们 开始使用&lt;code&gt;View&lt;/code&gt;控件来布局，代码如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;import React, &amp;#123; Component &amp;#125; from &amp;apos;react&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;import &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  AppRegistry,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  StyleSheet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Text,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  View&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; from &amp;apos;react-native&amp;apos;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;class RNAppProject extends Component &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;View style=&amp;#123;styles.container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;View style=&amp;#123;styles.custom_container&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;View style=&amp;#123;styles.custom_container_inner&amp;#125;&amp;gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    flex: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    justifyContent: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alignItems: &amp;apos;center&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &amp;apos;#F5FCFF&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  custom_container: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 400,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 300,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &amp;apos;#7cb342&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderBottomColor: &amp;apos;darkgray&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderBottomWidth: 20,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderLeftWidth: 10,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderLeftColor: &amp;apos;antiquewhite&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderRightWidth: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderRightColor: &amp;apos;crimson&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderTopWidth: 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderTopColor: &amp;apos;black&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    paddingLeft: 130,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    paddingTop: 110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  custom_container_inner: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    width: 150,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    height: 55,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    backgroundColor: &amp;apos;#e32a61&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderWidth: 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderRadius: 5,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderStyle: &amp;apos;dashed&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    borderColor: &amp;apos;#ffffff&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AppRegistry.registerComponent(&amp;apos;RNAppProject&amp;apos;, () =&amp;gt; RNAppProject);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;当我们用真机调试时，将该项目部署后可以看到下面的界面:&lt;br&gt;&lt;img src=&quot;/images/webwxgetmsg.jpg&quot;&gt;&lt;br&gt;下面根据官网的质料和 &lt;a href=&quot;http://blog.csdn.net/llew2011/article/details/51068619&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这位老师的质料&lt;/a&gt; 得到下面的总结出下面这张地图&lt;br&gt;&lt;img src=&quot;/images/2016-07-1317-01-43.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;申明，本文产考资料为&lt;/code&gt;&lt;a href=&quot;http://blog.csdn.net/p106786860/article/details/51100811&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/p106786860/article/details/51100811&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-控件中的style的写法&quot;&gt;&lt;a href=&quot;#3-控件中的style的写法&quot; class=&quot;headerlink&quot; title=&quot;3.控件中的style的写法&quot;&gt;&lt;/a&gt;3.控件中的style的写法&lt;/h3&gt;&lt;p&gt;在控件中使用style在控制样式时有两种写法如下:&lt;br&gt;写法一&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View style=&amp;#123;&amp;#123;flexDirection: &amp;apos;Row&amp;apos;, margin: 20, height: 100&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;lt;View style=&amp;#123;&amp;#123;backgroundColor: &amp;apos;red&amp;apos;, flex:1&amp;#125;&amp;#125;&amp;gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;写法二&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;View style=&amp;#123;styles.view_1&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;View style=&amp;#123;styles.view_2&amp;#125;&amp;gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/View&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var styles = StyleSheet.create(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  view_1: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flexDirection: &amp;apos;row&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      padding: 20,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      height: 100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  view_2: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      backgroundColor: &amp;apos;red&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      flex: 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文的参考资料为:&lt;a href=&quot;http://blog.csdn.net/llew2011/article/details/51068619&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-查看项目中的index-a
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
      <category term="View" scheme="ty52u.cn/tags/View/"/>
    
  </entry>
  
  <entry>
    <title>2.React-Native第一个App</title>
    <link href="ty52u.cn/2016/07/13/React-Native/2-React-Native%E7%AC%AC%E4%B8%80%E4%B8%AAApp/"/>
    <id>ty52u.cn/2016/07/13/React-Native/2-React-Native第一个App/</id>
    <published>2016-07-13T01:47:54.000Z</published>
    <updated>2016-07-13T06:08:52.172Z</updated>
    
    <content type="html">&lt;p&gt;在上一篇文章中介绍了React-Native Android 开发环境的搭建，接下来就应该开始尝试Run一下了&lt;a href=&quot;http://ty52u.cn/2016/07/12/React-Native/React-Native%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/&quot;&gt;React-Native 环境搭建&lt;/a&gt;，&lt;br&gt;因为 Android项目是用 Gradle 构建打包，所以依赖Gradle，在我们用&lt;code&gt;react-native run-android&lt;/code&gt;命令运行 RNAppProject 项目时 程序会自动去下载 Gradle， 默认会在&lt;code&gt;$User/.gradle/wrapper/dists&lt;/code&gt; 里面，这个过程很漫长，所以我们得找找捷径，打开Adroid项目的目录可以发现有个在gradle/wrapper/有个叫&lt;code&gt;gradle-wrapper.properties&lt;/code&gt;的文件如下图:&lt;img src=&quot;/images/2016-07-13&quot; title=&quot;9-56-18.png&quot;&gt;&lt;br&gt;打开这个文件看以看到这里面有&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;distributionBase=GRADLE_USER_HOME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;distributionPath=wrapper/dists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zipStoreBase=GRADLE_USER_HOME&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;zipStorePath=wrapper/dists&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这不难看出 &lt;code&gt;distributionBase=GRADLE_USER_HOME&lt;/code&gt;还记得之前我们配置过&lt;code&gt;GRADLE_USER_HOME&lt;/code&gt;环境变量吗？没错就是表示gradle的本地仓储；&lt;code&gt;distributionUrl&lt;/code&gt;表示需要从神么地方下载神么版本的gradle，其他的就不多解释了。&lt;br&gt;1.运行 &lt;code&gt;react-native run-android&lt;/code&gt; 之前选运行&lt;code&gt;adb reverse tcp:8081 tcp:8081&lt;/code&gt; ，如果这步报错出现 -error: device unauthorized.- 表示没有勾选手机的上的授权允许。勾选后在运行。&lt;br&gt;2.运行 &lt;code&gt;react-native run-android&lt;/code&gt; 这步会去下很多的包，所以需要一段时间。&lt;br&gt;3.出现下面的界面中带有&lt;code&gt;BUILD SUCCESSFUL&lt;/code&gt;说明android项目部署成功&lt;br&gt;&lt;img src=&quot;/images/2016-07-1313-59-1.png&quot;&gt;&lt;br&gt;4.注意这途中可能会出现各种奇葩的问题，当服务器显示部署成功后查看手机又傻b了，怎么是红屏的?这个问题一般需要两步就搞定了(android5.0以上的手机)&lt;br&gt;  (1) 先运行 adb reverse tcp:8081 tcp:8081&lt;br&gt;  (2) 运行 react-native start // 启动包服务&lt;br&gt;  (3) react-native run-android //搞定&lt;br&gt;5.开一下完整的页面如下:&lt;br&gt;&lt;img src=&quot;/images/1194432545.jpg&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在上一篇文章中介绍了React-Native Android 开发环境的搭建，接下来就应该开始尝试Run一下了&lt;a href=&quot;http://ty52u.cn/2016/07/12/React-Native/React-Native%E7%8E%AF%E5%A2%83%E6
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>android开发环境搭建</title>
    <link href="ty52u.cn/2016/07/12/android%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>ty52u.cn/2016/07/12/android开发环境搭建/</id>
    <published>2016-07-12T15:39:07.000Z</published>
    <updated>2016-07-12T16:29:34.211Z</updated>
    
    <content type="html">&lt;p&gt;要搭建 Android 的开发环境需要先搭建 java的开发环境，一下全是基于linux环境搭建基本步奏如下:&lt;/p&gt;
&lt;h3 id=&quot;1-安装-git-版本管理工具&quot;&gt;&lt;a href=&quot;#1-安装-git-版本管理工具&quot; class=&quot;headerlink&quot; title=&quot;1.安装 git 版本管理工具&quot;&gt;&lt;/a&gt;1.安装 git 版本管理工具&lt;/h3&gt;&lt;p&gt;git是一个开源的分布式版本控制系统,&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git 官网&lt;/a&gt;，git的学习可以参考&lt;a href=&quot;http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;廖雪峰老师的git教程&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo add-apt-repository ppa:git-core/ppa //添加 git 的源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update // 跟新系统软件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git 安装 git软件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;查看是否安装成功使用 &lt;code&gt;git --version&lt;/code&gt;会吧git的版本打印出来表示安装成功。&lt;/p&gt;
&lt;h3 id=&quot;2-安装java&quot;&gt;&lt;a href=&quot;#2-安装java&quot; class=&quot;headerlink&quot; title=&quot;2.安装java&quot;&gt;&lt;/a&gt;2.安装java&lt;/h3&gt;&lt;p&gt;java 我们选择 oracle发行的java(oracle 就 android 侵全案 败诉 google 所以不用担心使用android会换用openjdk)。先去下载个&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jdk&lt;/a&gt;在这里选择适合的&lt;code&gt;jdk&lt;/code&gt;下载。我下载的是&lt;code&gt;.tar.gz&lt;/code&gt;文件的jdk，然后解压到你喜欢的地方，在配置环境变量，这里只说一下jdk的环境变量的配置：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo vim /etc/profile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 添加jdk配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JAVA_HOME=/home/huangyong/develop/java/jdk1.8.0_91 //解压后的jdk所在目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export JRE_HOME=$&amp;#123;JAVA_HOME&amp;#125;/jre  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export CLASSPATH=.:$&amp;#123;JAVA_HOME&amp;#125;/lib:$&amp;#123;JRE_HOME&amp;#125;/lib  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$&amp;#123;JAVA_HOME&amp;#125;/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 刷新下配置&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ source /etc/profile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;之后检查是否一配置成功 在终端输入&lt;code&gt;java -version&lt;/code&gt;打印出与你配置的jdk相关信息表示配置成功。这里jdk的安装配置就搞定了。&lt;/p&gt;
&lt;h3 id=&quot;3-安装Android-SDK&quot;&gt;&lt;a href=&quot;#3-安装Android-SDK&quot; class=&quot;headerlink&quot; title=&quot;3.安装Android SDK&quot;&gt;&lt;/a&gt;3.安装Android SDK&lt;/h3&gt;&lt;p&gt;安装Android 需要去google的Android网站去下载SDK，所以请自备梯子(目前的南海形式紧张，情有可原，话又说回来 &lt;code&gt;犯我中华者虽远必诛&lt;/code&gt;中国 一寸也不能少)，&lt;a href=&quot;https://dl.google.com/android/android-sdk_r24.4.1-linux.tgz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android-SDK&lt;/a&gt;下载后解压到喜欢的地方然后运行 &lt;code&gt;Android-SDK/tools/android&lt;/code&gt; 文件，下载或是跟新需要的包和android版本。弄完后还是需要配置一下android的环境变量，一样的打开 &lt;code&gt;/etc/profile&lt;/code&gt;文件 添加android 的配置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export ANDROID_HOME=/home/huangyong/develop/android-sdk-linux&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$PATH:$ANDROID_HOME/platform-tools&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;添加好后使之生效 &lt;code&gt;source /etc/profile&lt;/code&gt;,然后验证下，需要有usb连接android手机和电脑,然后在终端输入 &lt;code&gt;adb devices&lt;/code&gt; 查看是否打印连接的android手机。&lt;/p&gt;
&lt;h3 id=&quot;4-安装Gradle&quot;&gt;&lt;a href=&quot;#4-安装Gradle&quot; class=&quot;headerlink&quot; title=&quot;4. 安装Gradle&quot;&gt;&lt;/a&gt;4. 安装Gradle&lt;/h3&gt;&lt;p&gt;android应用是用gradle构建的，所以还需要安装gradle，先去下载gradle 并解压到喜欢的目录，同样配置环境变量然后使之生效，配置环境变量如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;export GRADLE_HOME=/home/huangyong/develop/gradle-2.14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export PATH=$GRADLE_HOME/bin:$PATH&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 配置 gradle 默认的本地仓库&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export GRADLE_USER_HOME=/home/huangyong/develop/Maven/.gradle&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;立即生效&lt;code&gt;source /etc/profile&lt;/code&gt; 再输入 &lt;code&gt;gradle -version&lt;/code&gt; 查看。&lt;/p&gt;
&lt;h3 id=&quot;5-安装-Android-Studio&quot;&gt;&lt;a href=&quot;#5-安装-Android-Studio&quot; class=&quot;headerlink&quot; title=&quot;5.安装 Android Studio&quot;&gt;&lt;/a&gt;5.安装 Android Studio&lt;/h3&gt;&lt;p&gt;神马,你用的是eclipse? 有没有搞错啊，兄弟趁你还年轻赶紧换到 &lt;a href=&quot;https://developer.android.com/studio/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Android Studio&lt;/a&gt; 吧。&lt;br&gt;这个软件的安装很简单不用多介绍了吧，如果不清楚请自行&lt;code&gt;&lt;a href=&quot;http://www.bing.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bing&lt;/a&gt;&lt;/code&gt;，额你是不是有不知道神么是&lt;code&gt;bing&lt;/code&gt;，那你还是用这个吧&lt;code&gt;baidu&lt;/code&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;要搭建 Android 的开发环境需要先搭建 java的开发环境，一下全是基于linux环境搭建基本步奏如下:&lt;/p&gt;
&lt;h3 id=&quot;1-安装-git-版本管理工具&quot;&gt;&lt;a href=&quot;#1-安装-git-版本管理工具&quot; class=&quot;headerlink&quot; title=
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="android" scheme="ty52u.cn/tags/android/"/>
    
      <category term="react-native" scheme="ty52u.cn/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>React-Native环境搭建</title>
    <link href="ty52u.cn/2016/07/12/React-Native/React-Native%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>ty52u.cn/2016/07/12/React-Native/React-Native环境搭建/</id>
    <published>2016-07-12T06:51:56.000Z</published>
    <updated>2016-07-13T00:48:41.355Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;在搭建React-Native 开发Android环境的时候请先搭建好Android 的开发环境&lt;/code&gt;可以参考 &lt;a href=&quot;http://ty52u.cn/2016/07/12/android%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/&quot;&gt;android开发环境搭建&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;一-React-Native配置安装&quot;&gt;&lt;a href=&quot;#一-React-Native配置安装&quot; class=&quot;headerlink&quot; title=&quot;一 React Native配置安装&quot;&gt;&lt;/a&gt;一 React Native配置安装&lt;/h2&gt;&lt;p&gt;React-Native 是什么这里就不多说了(是伟大的facebook 开源项目),这里就直接开始，直入主题。&lt;br&gt;&lt;a href=&quot;http://facebook.github.io/react-native/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native 项目的官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/facebook/react-native&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;React-Native 项目源码&lt;/a&gt;&lt;br&gt;React-Native 需要依赖 Nodejs，所以事先我们需要安装Nodejs，这里推荐大家先安装 NVM (Nodejs Version Manage) 通过nvm来安装管理Nodejs具体步奏如下:&lt;br&gt;  1.下载安装nvm&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  安装完成后需要刷一下环境变量，我的环境是Linux(ubunut)所以只需如下操作:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  之后在检查一下nvm是否已安装成功:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ nvm --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  2.安装完成nvm后就可以用nvm命令来按装nodejs了，命令如下:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ nvm list //检查已安装的版本，-&amp;gt;指向哪个版本就是当前使用的版本，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ nvm install 6.3.0 // 按装版本号为V6.3.0的nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ nvm use 4.4.7 // 修改默认使用的nodejs为4.4.7版本的(前提是已经安装了4.4.7版本的nodejs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  完成后再是一下是否已成功安装nodejs:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ node --version&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  3.接下来我们需要安装facebook 的Watchman,只是用于监控bug 和出发指定操作的。&lt;a href=&quot;https://facebook.github.io/watchman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;watchman 官方地址&lt;/a&gt;&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo git clone https://github.com/facebook/watchman.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ cd watchman&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ./autogen.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo ./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo make&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  如果在这步安装watchman报错处理如下:&lt;br&gt;    错误一&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./autogen.sh: 9: ./autogen.sh: aclocal: not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./autogen.sh: 10: ./autogen.sh: autoheader: not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./autogen.sh: 11: ./autogen.sh: automake: not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;    处理方式是 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install autoconf&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;    错误二: 如果报错新增里有关python的错误那处理方式是&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install python-dev&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  4.安装folw，这是一个 JavaScript 的静态类型检查器，建议安装它&lt;a href=&quot;https://www.flowtype.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flow官方地址&lt;/a&gt;&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install folw-bin -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;  5.安装 React-Native&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g react-native-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这里完成后就可以验证一下是否成功了用下面的命令创建一个React-Native工程&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ react-native init RNAppProject&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这一步需要漫长的时间，慢慢等吧。&lt;br&gt;  项目创建完成后生成的目录如下&lt;br&gt;  &lt;img src=&quot;/images/2016-07-1216-07-18RNApp.png&quot; title=&quot;react-native项目目录结构&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;android和ios文件夹是为android studio 和 Xcode创建的项目&lt;/li&gt;
&lt;li&gt;index.android.js和index.ios.js文件为Android和IOS的空壳应用文件&lt;/li&gt;
&lt;li&gt;node_modules文件夹为Node.js包，含React Native框架包。&lt;br&gt;6.测试 Android应用&lt;ul&gt;
&lt;li&gt;检查手机是已经通过adb连接到PC上(命令行输入 adb devices看看)&lt;/li&gt;
&lt;li&gt;adb reverse tcp:8081 tcp:8081 配置Android设备8081端口，访问PC的8081端口的React服务&lt;/li&gt;
&lt;li&gt;cd RNAppProject,路径切换到项目主目录&lt;/li&gt;
&lt;li&gt;sudo react-native start 启动PC端的React服务&lt;/li&gt;
&lt;li&gt;react-native run-android进行加载运行android 应用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上就是react-native android开发环境的搭建，如果途中出现各种问题可以查考&lt;a href=&quot;http://blog.csdn.net/p106786860/article/details/51052299&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这篇文章&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;在搭建React-Native 开发Android环境的时候请先搭建好Android 的开发环境&lt;/code&gt;可以参考 &lt;a href=&quot;http://ty52u.cn/2016/07/12/android%E5%BC%80%E5%8F%91%E7%8E%AF%
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>atom好用的插件及快捷键</title>
    <link href="ty52u.cn/2016/07/12/atom%E5%A5%BD%E7%94%A8%E7%9A%84%E6%8F%92%E4%BB%B6%E5%8F%8A%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>ty52u.cn/2016/07/12/atom好用的插件及快捷键/</id>
    <published>2016-07-12T06:33:27.000Z</published>
    <updated>2016-07-12T06:36:51.197Z</updated>
    
    <content type="html">&lt;p&gt;常用插件:&lt;br&gt;terminal-plus – 命令行面板&lt;br&gt;simplified-chinese-menu – atom编辑器简体中文汉化&lt;br&gt;regex-railroad-diagram – 正则表达式图形显示&lt;br&gt;nuclide – facebook 针对atomIDE 的个性化争强&lt;br&gt;minimap – 代码地图&lt;br&gt;minimap-git-diff – 针对 git的代码地图&lt;br&gt;linter – 代码校验的主插件&lt;br&gt;linter-jshint – 代码校验的js插件&lt;br&gt;highlight-line – 光标所在行高亮&lt;br&gt;highlight-selected – 当前所有字符高亮&lt;br&gt;file-icons – 文件样式图标(个性化)&lt;br&gt;emmet – html 开发神器&lt;br&gt;docblockr – 优秀的代码注释插件&lt;br&gt;color-picker – 颜色选择调试插件&lt;br&gt;atom-beautify – 所有语言的 代码格式化插件&lt;br&gt;autocomplete-* – 代码提示插件(autocomplete-paths 是 路径补全，autocomplete-bibtex github 的markdown提示)&lt;br&gt;git-time-machine – git 修改记录图形显示&lt;br&gt;atom-ternjs – js相关代码提示补全&lt;br&gt;js-hyperclick – js代码跳转(facebook)&lt;br&gt;快捷键&lt;br&gt;文件切换 ctrl-shift-s 保存所有打开的文件 ctrl-shift-o 打开目录 ctrl-\ 显示或隐藏目录树 ctrl-0焦点移到目录树（目录树下，使用a，m，delete来增加，修改和删除） ctrl-t 或 cmd-p 查找文件 ctrl-b 在打开的文件之间切换 ctrl-shift-b 只搜索从上次git commit后修改或者新增的文件&lt;/p&gt;
&lt;p&gt;导航 (等价于上下左右) ctrl-p 前一行 ctrl-n 后一行 ctrl-f 前一个字符 ctrl-b 后一个字符 alt-B, alt-left 移动到单词开始 alt-F, alt-right 移动到单词末尾 cmd-right, ctrl-E 移动到一行结束 cmd-left, ctrl-A 移动到一行开始 cmd-up 移动到文件开始 cmd-down 移动到文件结束 ctrl-g 移动到指定行 row:column 处 cmd-r 在方法之间跳转&lt;/p&gt;
&lt;p&gt;目录树操作 cmd-\ 或者 cmd-k cmd-b 显示(隐藏)目录树 ctrl-0 焦点切换到目录树(再按一次或者Esc退出目录树) a 添加文件 d 将当前文件另存为(duplicate) i 显示(隐藏)版本控制忽略的文件 alt-right 和 alt-left 展开(隐藏)所有目录 ctrl-al-] 和 ctrl-al-[ 同上 ctrl-[ 和 ctrl-] 展开(隐藏)当前目录 ctrl-f 和 ctrl-b 同上 cmd-k h 或者 cmd-k left 在左半视图中打开文件 cmd-k j或者cmd-k down在下半视图中打开文件 cmd-k k 或者cmd-k up 在上半视图中打开文件 cmd-k l 或者 cmd-k right 在右半视图中打开文件 ctrl-shift-C 复制当前文件绝对路径&lt;/p&gt;
&lt;p&gt;书签 cmd-F2 在本行增加书签 F2 跳到当前文件的下一条书签 shift-F2 跳到当前文件的上一条书签 ctrl-F2 列出当前工程所有书签&lt;/p&gt;
&lt;p&gt;选取 ctrl-shift-P 选取至上一行 ctrl-shift-N 选取至下一样 ctrl-shift-B 选取至前一个字符 ctrl-shift-F 选取至后一个字符 alt-shift-B, alt-shift-left 选取至字符开始 alt-shift-F, alt-shift-right 选取至字符结束 ctrl-shift-E, cmd-shift-right 选取至本行结束 ctrl-shift-A, cmd-shift-left 选取至本行开始 cmd-shift-up 选取至文件开始 cmd-shift-down 选取至文件结尾 cmd-A 全选 cmd-L 选取一行，继续按回选取下一行 ctrl-shift-W 选取当前单词&lt;/p&gt;
&lt;p&gt;编辑和删除操作 ctrl-T 使光标前后字符交换 cmd-J 将下一行与当前行合并 ctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动 cmd-shift-D 复制当前行到下一行 cmd-K, cmd-U 使当前字符大写 cmd-K, cmd-L 使当前字符小写 ctrl-shift-K 删除当前行 cmd-backspace 删除到当前行开始 cmd-fn-backspace 删除到当前行结束 ctrl-K 剪切到当前行结束 alt-backspace 或 alt-H 删除到当前单词开始 alt-delete 或 alt-D 删除到当前单词结束 cmd-click 增加新光标 cmd-shift-L 将多行选取改为多行光标 ctrl-shift-up, ctrl-shift-down 增加上（下）一行光标 cmd-D 选取文档中和当前单词相同的下一处 ctrl-cmd-G 选取文档中所有和当前光标单词相同的位置 ctrl-m 相应括号之间，html tag之间等跳转 ctrl-cmd-m 括号(tag)之间文本选取 alt-cmd-. 关闭当前XML/HTML tag ctrl-shift-U 调出切换编码选项&lt;/p&gt;
&lt;p&gt;查找和替换 cmd-F 在buffer中查找 cmd-shift-f 在整个工程中查找&lt;/p&gt;
&lt;p&gt;代码片段 alt-shift-S 查看当前可用代码片段(在~/.atom目录下snippets.cson文件中存放了你定制的snippets)&lt;/p&gt;
&lt;p&gt;自动补齐 ctrl-space 提示补全信息&lt;/p&gt;
&lt;p&gt;折叠 alt-cmd-[ 折叠 alt-cmd-] 展开 alt-cmd-shift-{ 折叠全部 alt-cmd-shift-} 展开全部 cmd-k cmd-N 指定折叠层级 N为层级数&lt;/p&gt;
&lt;p&gt;文件语法高亮 ctrl-shift-L 选择文本类型&lt;/p&gt;
&lt;p&gt;使用Atom进行写作 ctrl-shift-M Markdown预览&lt;/p&gt;
&lt;p&gt;git操作 cmd-alt-Z checkout HEAD 版本 cmd-shift-B 弹出untracked 和 modified文件列表 alt-g down alt-g up 在修改处跳转 alt-G D 弹出diff列表 alt-G O 在github上打开文件 alt-G G 在github上打开项目地址 alt-G B 在github上打开文件blame alt-G H 在github上打开文件history alt-G I 在github上打开issues alt-G R 在github打开分支比较 alt-G C 拷贝当前文件在gihub上的网址&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;常用插件:&lt;br&gt;terminal-plus – 命令行面板&lt;br&gt;simplified-chinese-menu – atom编辑器简体中文汉化&lt;br&gt;regex-railroad-diagram – 正则表达式图形显示&lt;br&gt;nuclide – facebook 针对a
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="nodejs" scheme="ty52u.cn/tags/nodejs/"/>
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="atom-plugins" scheme="ty52u.cn/tags/atom-plugins/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="ty52u.cn/2016/07/12/hello-world/"/>
    <id>ty52u.cn/2016/07/12/hello-world/</id>
    <published>2016-07-12T01:05:48.951Z</published>
    <updated>2016-06-13T08:07:26.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React-学习笔记</title>
    <link href="ty52u.cn/2016/07/04/React-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>ty52u.cn/2016/07/04/React-学习笔记/</id>
    <published>2016-07-04T08:03:40.000Z</published>
    <updated>2016-07-12T03:41:08.636Z</updated>
    
    <content type="html">&lt;p&gt;本教程参照阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot; title=&quot;阮一峰博客&quot; target=&quot;_blank&quot;&gt;React教程&lt;/a&gt;学习所写的笔记&lt;/p&gt;
&lt;h2 id=&quot;React-HTML-源码&quot;&gt;&lt;a href=&quot;#React-HTML-源码&quot; class=&quot;headerlink&quot; title=&quot;React HTML 源码&quot;&gt;&lt;/a&gt;React HTML 源码&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html lang=&amp;apos;en&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&amp;quot;../build/react.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&amp;quot;../build/react-dom.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script src=&amp;quot;../build/browser.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/head&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div id=&amp;quot;example&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;script type=&amp;quot;text/babel&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      // 这是注释&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用React的时候需要加载三个基本的js，其加载顺序为&lt;code&gt;react.js、react-dom.js、Browser.min.js&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;react.js&lt;/code&gt; 是React 的核心库;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-dom.js&lt;/code&gt; 是React 提供与DOM相关的功能;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Browser.min.js&lt;/code&gt; 是将JSX语法转为javascript语法.&lt;br&gt;在上面代码中的script标签中有一个 &lt;code&gt;type&lt;/code&gt; 属性为 &lt;code&gt;text/babel&lt;/code&gt;,因为React规定使用的是自己的JSX语法，和javascript是不兼容的，在代码中使用到JSX语法的地方都要加上&lt;code&gt;type=&amp;quot;text/balel&amp;quot;&lt;/code&gt;.&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ jsx src --out-dir build&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是将src子目录的js文件进行语法转换，并将转换好的文件放到build子目录.&lt;/p&gt;
&lt;h2 id=&quot;ReactDOM-render&quot;&gt;&lt;a href=&quot;#ReactDOM-render&quot; class=&quot;headerlink&quot; title=&quot;ReactDOM.render()&quot;&gt;&lt;/a&gt;ReactDOM.render()&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1&amp;gt;Hello, World!&amp;lt;/h1&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ReactDOM.render()&lt;/code&gt;是&lt;code&gt;react&lt;/code&gt;最基本的方法,主要用来将模板转为&lt;code&gt;HTML&lt;/code&gt;,并插入到指定的&lt;code&gt;DOM&lt;/code&gt;节点.再上面代码中将一个&lt;code&gt;h1&lt;/code&gt;标题插入&lt;code&gt;example&lt;/code&gt;节点。&lt;/p&gt;
&lt;h2 id=&quot;JSX-语法&quot;&gt;&lt;a href=&quot;#JSX-语法&quot; class=&quot;headerlink&quot; title=&quot;JSX 语法&quot;&gt;&lt;/a&gt;JSX 语法&lt;/h2&gt;&lt;p&gt;&lt;code&gt;JSX语法&lt;/code&gt;允许&lt;code&gt;HTML语言&lt;/code&gt;直接写在&lt;code&gt;javascript语言&lt;/code&gt;中，不需要加任何引号,他允许&lt;code&gt;HTML与javascript混写&lt;/code&gt;.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var names = [&amp;apos;Al&amp;apos;, &amp;apos;Bl&amp;apos;, &amp;apos;Cl&amp;apos;, &amp;apos;El&amp;apos;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	names.map(function(name)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            	return &amp;lt;div&amp;gt;Hello &amp;#123;name&amp;#125; !&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    document.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码的基本规则为: 遇到&lt;code&gt;HTML&lt;/code&gt;标签(以&lt;code&gt;&amp;lt;&lt;/code&gt;打头 的)就用HTML规则解析，遇到代码块(以 &lt;code&gt;{&lt;/code&gt; 打头的)就用javascript规则解析。&lt;br&gt;JSX 允许直接在模板中查人javascript变量，如果变量是一个数组，会展开这个数组的所有成员,如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var arr = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;h2&amp;gt;React is awesome&amp;lt;/h2&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&amp;#123;arr&amp;#125;&amp;lt;/div&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;组件&quot;&gt;&lt;a href=&quot;#组件&quot; class=&quot;headerlink&quot; title=&quot;组件&quot;&gt;&lt;/a&gt;组件&lt;/h2&gt;&lt;p&gt;&lt;code&gt;React&lt;/code&gt;允许将代买分装成&lt;code&gt;组件(component)&lt;/code&gt;然后像插入普通的HTML标签一样在网页中插入这个组件，&lt;code&gt;React.createClass()&lt;/code&gt;方法就用于生成一个组件类.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var HelloMessage = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	return &amp;lt;h1&amp;gt;Hello &amp;#123;this.props.name&amp;#125;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;HelloMessage name=&amp;apos;Johe&amp;apos; /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码中变量&lt;code&gt;HelloMessage&lt;/code&gt;就是一个组件，模板插入&lt;code&gt;&amp;lt;HelloMessage /&amp;gt;&lt;/code&gt;时会自动生成 &lt;code&gt;HelloMessage&lt;/code&gt;的一个实例(在下稳重出现的‘组件’都是指组件类的实例),所有的组件都要有自己的&lt;code&gt;render(渲染)&lt;/code&gt;方法，用于输出组件。在创建组件类的时候要注意&lt;code&gt;第一个字母必须大写&lt;/code&gt;,否则会报错，如上面的HelloMessage 不能写成helloMessage，还有就是组件只能包含一个顶层标签，不然也会报错，如下代码:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var HelloMessage = React.createClass(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    // 这里会报错，因为HelloMessage 组件包含了两个顶层标签 h1和p&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	return &amp;lt;h1&amp;gt;hello &amp;#123;this.props.name&amp;#125;&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;World&amp;lt;/p&amp;gt; ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;组件的用法与原生的HTML标签一致，可以任意加入属性&lt;code&gt;&amp;lt;HelloMessage name=&amp;quot;Johe&amp;quot;&amp;gt;&lt;/code&gt;,就是&lt;code&gt;HelloMessage&lt;/code&gt;组件加入一个&lt;code&gt;name&lt;/code&gt;属性，值为 &lt;code&gt;Johe&lt;/code&gt;,组件的属性可以在组件类的&lt;code&gt;this.props&lt;/code&gt;对象上获取，如&lt;code&gt;name&lt;/code&gt;属性可以通过&lt;code&gt;this.props.name&lt;/code&gt; 获取。在添加组件属性的时候需要注意&lt;code&gt;class&lt;/code&gt;属性需要写成&lt;code&gt;className&lt;/code&gt;、&lt;code&gt;for&lt;/code&gt;属性需要写成&lt;code&gt;htmlFor&lt;/code&gt;，因为&lt;code&gt;class&lt;/code&gt;、&lt;code&gt;for&lt;/code&gt;是javascript`的保留字。&lt;/p&gt;
&lt;h2 id=&quot;this-props-children&quot;&gt;&lt;a href=&quot;#this-props-children&quot; class=&quot;headerlink&quot; title=&quot;this.props.children&quot;&gt;&lt;/a&gt;this.props.children&lt;/h2&gt;&lt;p&gt;&lt;code&gt;this.props&lt;/code&gt;对象的属性与组件的属性一一对应,但有个例外是&lt;code&gt;this.props.children&lt;/code&gt;,它表示组件的所有子节点，如下例子:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var NotesList= React.createClass(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;lt;ol&amp;gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        React.Children.map(this.props.children, function(child)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return &amp;lt;li&amp;gt;&amp;#123;child&amp;#125;&amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;NotesList&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;span&amp;gt;hello&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;span&amp;gt;world&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/NotesList&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;NotesList&lt;/code&gt;组件有两个&lt;code&gt;span&lt;/code&gt;子节点，可以通过this.props.children获取到。&lt;br&gt;&lt;code&gt;注意&lt;/code&gt; &lt;code&gt;this.props.children&lt;/code&gt;的值有三种可能:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果当前组件没有子节点，那它就是&lt;code&gt;undefined&lt;/code&gt;；&lt;/li&gt;
&lt;li&gt;如果有一个子节点，那获取的数据类型为&lt;code&gt;object&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;如果有多个子节点,那获取的数据类型就是&lt;code&gt;array&lt;/code&gt;,所以处理&lt;code&gt;this.props.children&lt;/code&gt;的时候需要注意。&lt;br&gt;React 提供一个工具方法 &lt;code&gt;React.Children&lt;/code&gt; 来处理&lt;code&gt;this.props.children&lt;/code&gt;,我们可以用&lt;code&gt;React.Children.map&lt;/code&gt;来遍历子节点，而不用担心&lt;code&gt;this.props.children&lt;/code&gt;的数据类型是什么了，需要了解很多的&lt;code&gt;React.Children&lt;/code&gt;的方法请移步到&lt;a href=&quot;https://facebook.github.io/react/docs/top-level-api.html#react.children&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;PropTypes&quot;&gt;&lt;a href=&quot;#PropTypes&quot; class=&quot;headerlink&quot; title=&quot;PropTypes&quot;&gt;&lt;/a&gt;PropTypes&lt;/h2&gt;&lt;p&gt;在上面的介绍中说过&lt;code&gt;组件的属性&lt;/code&gt;可以接受任意值，字符串、对象、函数等等,但有的时候我们需要一种机制来验证别人使用的组件提供的参数是否符合要求。&lt;br&gt;组件类的&lt;code&gt;PropTypes&lt;/code&gt;属性就是用来验证组件实例的属性是否符合要求，如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var MyTitle = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;propTypes:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	title: React.PropTypes.string.isRequired&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;lt;h1&amp;gt;&amp;#123;this.props.title&amp;#125;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在上面的&lt;code&gt;MyTitle&lt;/code&gt;组件有一个title属性，&lt;code&gt;PropTypes&lt;/code&gt; 告诉&lt;code&gt;React&lt;/code&gt;这个&lt;code&gt;title&lt;/code&gt;属性是必须的，而且它的值必须是字符串；&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var data = 123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;MyTitle title = &amp;#123;data&amp;#125; /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如上代码中&lt;code&gt;title&lt;/code&gt;的属性就通不过验证，控制台会报错。&lt;br&gt;&lt;code&gt;PropTypes&lt;/code&gt;的更多设置请查看&lt;a href=&quot;http://facebook.github.io/react/docs/reusable-components.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;br&gt;此外，getDefaultProps方法可以用来设置组件属性的默认值,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var MyTitle = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getDefaultProps: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title: &amp;apos;Hello World&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;lt;h1&amp;gt;&amp;#123;this.props.title&amp;#125;&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;MyTitle /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;获取真是的DOM节点&quot;&gt;&lt;a href=&quot;#获取真是的DOM节点&quot; class=&quot;headerlink&quot; title=&quot;获取真是的DOM节点&quot;&gt;&lt;/a&gt;获取真是的DOM节点&lt;/h2&gt;&lt;p&gt;我们在上面说的组件它并不是真实的DOM节点,而是存在于内存之中的一种数据结构，&lt;code&gt;Virtual DOM(虚拟 DOM)&lt;/code&gt;，只有当组件插入文档以后才会变成真实的DOM,根据React的设计所有的DOM变动都现在虚拟的DOM上发生然后在将实际发生变动部分反应到真实的DOM上，这种设计算法叫做 &lt;a href=&quot;http://calendar.perfplanet.com/2013/diff&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DOM diff&lt;/a&gt;,这种算法可以极大的提高网页的性能表现，还有的时候需要从组件获取真实的DOM节点，这时候就要用到&lt;code&gt;ref&lt;/code&gt;属性，如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var MyComponent = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;handleClick: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	this.refs.myTextInput.fous();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	&amp;lt;input type = &amp;apos;text&amp;apos; ref = &amp;apos;myTextInput&amp;apos;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;lt;input type = &amp;apos;button&amp;apos; value = &amp;apos;Fous the text input&amp;apos; onClick = &amp;#123;this.handleCilck&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;MyComponent /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    documnet.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在上面的代码中,组件&lt;code&gt;MyComponent&lt;/code&gt;的子节点有一个文本输入框,用于获取文本的输入，这种情况就必须获取真实的DOM节点，虚拟的DOM节点是获取不了用户输入的，为了拿到用户输入的数据，文本框中必须有一个ref属性.然后&lt;code&gt;this.refs.[refName]&lt;/code&gt;就返回这个真实的DOM节点。&lt;br&gt;注意,由于&lt;code&gt;this.refs.[refName]&lt;/code&gt;属性获取的是真实的DOM，所以必须等到虚拟DOM插入文档后才能使用这个属性，否则报错，上面的代码中通过组件指定&lt;code&gt;Click&lt;/code&gt;事件的回调函数确保了只有等到真实DOM发生&lt;code&gt;Click&lt;/code&gt;事件之后才会读取&lt;code&gt;this.refs.[refName]&lt;/code&gt;属性。&lt;br&gt;&lt;code&gt;React&lt;/code&gt;组件支持很多事件，除了&lt;code&gt;Click&lt;/code&gt;还有&lt;code&gt;KeyDown&lt;/code&gt;,&lt;code&gt;Copy&lt;/code&gt;,&lt;code&gt;Scroll&lt;/code&gt;等等，详细请查看&lt;a href=&quot;http://facebook.github.io/react/docs/events.html#supported-events&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;this-state&quot;&gt;&lt;a href=&quot;#this-state&quot; class=&quot;headerlink&quot; title=&quot;this.state&quot;&gt;&lt;/a&gt;this.state&lt;/h2&gt;&lt;p&gt;组件在很多情况是需要和用户互动，React设计的一大创新就是将组件看成一个状态机，开始用一个初始状态，然后用户互动导致状态改变，从而触发重新渲染UI，如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var LikeButton = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getInitialState: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;#123;liked: false&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;handleClick: function(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	this.setState(&amp;#123;liked: !this.state.liked&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var text = this.state.liked ? &amp;quot;like&amp;quot;: &amp;quot;haven&amp;apos;t liked&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p onClick = &amp;#123;this.handleClick&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	Your &amp;#123;text&amp;#125; this. Click to toggle.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;LikeButton /&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;documnet.getElementById(&amp;apos;example&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;LikeButton 是一个组件，它的&lt;code&gt;getInitialState&lt;/code&gt;方法用于定义初始状态，也就是一个对象，这个对象可以通this.state属性读取，当用户点击组件，导致状态变化，&lt;code&gt;this.setState&lt;/code&gt;方法就修改状态值，每次修改以后自动调用&lt;code&gt;this.render&lt;/code&gt;方法进行渲染组件。&lt;br&gt;由于 &lt;code&gt;this.props&lt;/code&gt;和&lt;code&gt;this.state&lt;/code&gt;都用与描述组件的特性，可能会产生混淆，简单的区分方法是 &lt;code&gt;this.props&lt;/code&gt;表示那些一旦定义就不会在改变的特性,而&lt;code&gt;this.state&lt;/code&gt;是会随着用户互动而产生变化的特性。&lt;/p&gt;
&lt;h2 id=&quot;表单&quot;&gt;&lt;a href=&quot;#表单&quot; class=&quot;headerlink&quot; title=&quot;表单&quot;&gt;&lt;/a&gt;表单&lt;/h2&gt;&lt;p&gt;用户在表单填入的内容属于用户跟组件互动的，所以不能用&lt;code&gt;this.props&lt;/code&gt;读取,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Input = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getInitialState: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return &amp;#123;value: &amp;apos;Hello!&amp;apos;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;handleChange: function(event)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	this.setState(&amp;#123;value: event.target.value&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var value = this.state.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;input type=&amp;quot;text&amp;quot; value=&amp;#123;value&amp;#125; onChange=&amp;#123;this.handleChange&amp;#125;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;&amp;#123;value&amp;#125;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在上面的代码中输入框&lt;input&gt;的值不能用&lt;code&gt;this.props.value&lt;/code&gt;读取，而要定义一个&lt;code&gt;onChange&lt;/code&gt; 事件的回调函数，通过&lt;code&gt;event.target.value&lt;/code&gt;读取用户输入的值。&lt;code&gt;textarea&lt;/code&gt;标签、&lt;code&gt;select&lt;/code&gt;标签、&lt;code&gt;radio&lt;/code&gt;标签都属于这种情况，查看更多 &lt;a href=&quot;http://facebook.github.io/react/docs/forms.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;组件的&quot;&gt;&lt;a href=&quot;#组件的&quot; class=&quot;headerlink&quot; title=&quot;组件的&quot;&gt;&lt;/a&gt;组件的&lt;a href=&quot;https://facebook.github.io/react/docs/working-with-the-browser.html#component-lifecycle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;生命周期&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;组件的生命周期有三个状态:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mounting:插入真实 DOM(组件被插入到DOM中)&lt;/li&gt;
&lt;li&gt;Updating: 正在被重新渲染(组件被重新渲染，查明DOM是否应该刷新)&lt;/li&gt;
&lt;li&gt;Unmounting:已移出真实DOM( 组件从DOM中移除)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;React 为每个状态提供两种处理函数,&lt;code&gt;will&lt;/code&gt;函数在进入状态之前调用,&lt;code&gt;did&lt;/code&gt;函数在进入状态之后调用,三中状态共计五种处理函数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;componentWillMount()–（在挂载发生之前立即被调用）&lt;/li&gt;
&lt;li&gt;componentDidMount()–（在挂载结束之后马上被调用。需要DOM节点的初始化操作应该放在这里）&lt;/li&gt;
&lt;li&gt;componentWillUpdate(object nextProps, object nextState)–（在更新发生之前被调用。你可以在这里调用this.setState()）&lt;/li&gt;
&lt;li&gt;componentDidUpdate(object prevProps, object prevState)–（在更新发生之后调用）&lt;/li&gt;
&lt;li&gt;componentWillUnmount()–（在组件移除和销毁之前被调用。清理工作应该放在这里）&lt;br&gt;此外React还提供两种特殊状态的处理函数。&lt;/li&gt;
&lt;li&gt;componentWillReceiveProps(object nextProps)–（当一个挂载的组件接收到新的props的时候被调用。该方法应该用于比较this.props和nextProps，然后使用this.setState()来改变state）&lt;/li&gt;
&lt;li&gt;shouldComponentUpdate(object nextProps,object nextState):–（boolean当组件做出是否要更新DOM的决定的时候被调用。实现该函数，优化this.props和nextProps，以及this.state和nextState的比较，如果不需要React更新DOM，则返回false）&lt;/li&gt;
&lt;li&gt;findDOMNode() –(DOMElement可以在任何挂载的组件上面调用，用于获取一个指向它的渲染DOM节点的引用)&lt;/li&gt;
&lt;li&gt;forceUpdate() –(当你知道一些很深的组件state已经改变了的时候，可以在该组件上面调用，而不是使用this.setState() )&lt;br&gt;这些方法的详细说明都可以参考&lt;a href=&quot;http://facebook.github.io/react/docs/component-specs.html#lifecycle-methods&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;，如下例子:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var Hello = React.Class(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getInitalState: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return&amp;#123;opacity:1.0&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;componentDidMount: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.tmer = setInterval(function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var opacity = this.state.opacity;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opacity -= 0.5;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if(opacity &amp;lt; 0.1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opacity = 1.0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    opacity: opacity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;.bind(this),100);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render:function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;div style=&amp;#123;&amp;#123;opacity: this.state.opacity&amp;#125;&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Hello &amp;#123;this.props.name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Hello name = &amp;apos;World&amp;apos;/&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面代码在&lt;code&gt;Hello&lt;/code&gt;组件加载以后，通过&lt;code&gt;componentDidMount&lt;/code&gt;方法设置一个定时器，每隔100毫秒就重新设置组件的透明度，从而引发重新渲染，另外组件的&lt;code&gt;style&lt;/code&gt;属性的设置方法不能写成&lt;code&gt;style=&amp;#39;opacity:{this.state.opacity}&amp;#39;&lt;/code&gt;而要写成&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;style=&amp;#123;&amp;#123;opacity:this.state.opacity&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这是因为React的组件样式是一个对象，所以第一层大括号表javascript语法，第二层大括号表示样式对象,更多介绍查看&lt;a href=&quot;https://facebook.github.io/react/tips/inline-styles.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Ajax&quot;&gt;&lt;a href=&quot;#Ajax&quot; class=&quot;headerlink&quot; title=&quot;Ajax&quot;&gt;&lt;/a&gt;Ajax&lt;/h2&gt;&lt;p&gt;组件的数据来源通常是通过Ajax请求服务器获取，可以使用&lt;code&gt;componentDidMount&lt;/code&gt;方法设置Ajax请求，等到请求成功再用&lt;code&gt;this.setState&lt;/code&gt;方法重新渲染UI,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var UserGist = React.createCalss(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getInitialState: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	username: &amp;apos;&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lastGistUrl: &amp;apos;&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;componentDidMount: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.get(this.props.source, function(result)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var lastGist = result[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (this.isMounted())&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	this.setState(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        	username: lastGist: ower.login,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastGistUrl:lastGist.html_url&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;.bind(this));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;this.state.username&amp;#125;&amp;apos;s last gist is &amp;lt;a href=&amp;#123;this.state.lastGistUrl&amp;#125;&amp;gt;here&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;UserGist source=&amp;apos;https://api.github.com/users/octocat/gists&amp;apos;/&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;document.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码使用JQuery 完成Ajax请求，这是为了便于说明React本身没有任何依赖，完全可以不用JQuery,而使用其他库。我们甚至可以将一个Promise对象传入组件，如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReactDOM.render(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;Repolist promise=&amp;#123;$.getJSON(&amp;apos;https://api.github.com/search/repositories?q=javascript&amp;amp;sort=stars&amp;apos;)&amp;#125;/&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;documnet.body&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码是从github上抓取数据然后将Promise对象作为属性，传给&lt;code&gt;RepoList&lt;/code&gt;组件，如果Promise对象正在抓取数据(pending状态),组件显示’正在加载’;如果Promise对象报错(rejected状态),组件显示报错信息；如果promise对象抓取数据成功(fulfilled状态)，组件显示获取的数据,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var RepoList = React.createClass(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;getInitialState: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;#123;loading: true, error: null, data: null&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;componentDidMount: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	this.props.promise.then(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	value =&amp;gt; this.setState(&amp;#123;loading: false, data: value&amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        error =&amp;gt; this.setState(&amp;#123;loading: false, error: error&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;render: function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (this.state.loading)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;lt;span&amp;gt;Loading...&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; else if(this.state.error != null)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return &amp;lt;span&amp;gt;Error: &amp;#123;this.state.error.message&amp;#125;&amp;lt;/span&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var repos = this.state.data.items;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var repoList = repos.map(function(repo)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	return(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;li&amp;gt;&amp;lt;a href = &amp;#123;repo.html_url&amp;#125;&amp;gt;&amp;#123;repo.name&amp;#125;&amp;lt;/a&amp;gt;(&amp;#123;repo.stargazers_count&amp;#125; stars)&amp;lt;br/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;repo.description&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/li&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return (&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;main&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&amp;lt;h1&amp;gt;Most Popular javascript ProJects in GitHub&amp;lt;/h1&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;ol&amp;gt;&amp;#123;repoList&amp;#125;&amp;lt;/ol&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/main&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Over~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本教程参照阮一峰老师的&lt;a href=&quot;http://www.ruanyifeng.com/blog/2015/03/react.html&quot; title=&quot;阮一峰博客&quot; target=&quot;_blank&quot;&gt;React教程&lt;/a&gt;学习所写的笔记&lt;/p&gt;
&lt;h2 id=&quot;React
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="React" scheme="ty52u.cn/tags/React/"/>
    
      <category term="React-Native" scheme="ty52u.cn/tags/React-Native/"/>
    
  </entry>
  
  <entry>
    <title>Express4-Response使用⑤</title>
    <link href="ty52u.cn/2016/06/18/Express4-Response%E4%BD%BF%E7%94%A8%E2%91%A4/"/>
    <id>ty52u.cn/2016/06/18/Express4-Response使用⑤/</id>
    <published>2016-06-18T07:35:54.000Z</published>
    <updated>2016-06-18T07:54:04.000Z</updated>
    
    <content type="html">&lt;p&gt;res.status(code); 设置http 响应码，比如: res.status(404);&lt;br&gt;res.set(field, [value]) 设置响应头信息:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;res.set(&amp;apos;Content-Type&amp;apos;, &amp;apos;text/plain&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;或是用json 的写法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;res.set(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Content-Type&amp;apos;: &amp;apos;text/plain&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;Content-Length&amp;apos;: &amp;apos;123&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;apos;ETag&amp;apos;: &amp;apos;123456&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;res.set(field,[value]) 还可以写成 res.header(field,[value]);&lt;br&gt;res.get([value]); 得到响应头的信息；&lt;br&gt;res.cookie(name, value, [options]); 设置cookie name 值为value,接受字符串参数或者JSON对象，path 属性默认为’/‘.&lt;br&gt;res.cookie(‘name’, ‘tobi’, {domain: ‘example.com’, path: ‘/admin’, secure: true});&lt;br&gt;res.cookie(‘rememberme’, ‘1’, {expires: new Date(Date.noe() + 900000), httpOnly: true});&lt;br&gt;maxAge 属性是一个便利的设置’expires’,它是一个从当前时间算起的毫秒：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;res.cookie(&amp;apos;rememberme&amp;apos;, &amp;apos;1&amp;apos;, &amp;#123;maxAge: 900000, httpOnly: true&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;可以传一个序列化的json对象作为参数，它会自动被bodyParser()中间件解析。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;res.cookie(&amp;apos;cart&amp;apos;, &amp;#123;items:[1,2,3,4]&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.cookie(&amp;apos;cart&amp;apos;, &amp;#123;items: [1,2,3]&amp;#125;, &amp;#123;maxAge: 900000&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;res.status(code); 设置http 响应码，比如: res.status(404);&lt;br&gt;res.set(field, [value]) 设置响应头信息:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="Express" scheme="ty52u.cn/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Express-Request使用④</title>
    <link href="ty52u.cn/2016/06/17/Express-Request%E4%BD%BF%E7%94%A8%E2%91%A3/"/>
    <id>ty52u.cn/2016/06/17/Express-Request使用④/</id>
    <published>2016-06-17T14:00:41.000Z</published>
    <updated>2016-06-18T02:59:00.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;request-是客户端请求的抽象-这个对象是只读的，它包含了客户请求的信息，直接上例子吧&quot;&gt;&lt;a href=&quot;#request-是客户端请求的抽象-这个对象是只读的，它包含了客户请求的信息，直接上例子吧&quot; class=&quot;headerlink&quot; title=&quot;request 是客户端请求的抽象,这个对象是只读的，它包含了客户请求的信息，直接上例子吧:&quot;&gt;&lt;/a&gt;request 是客户端请求的抽象,这个对象是只读的，它包含了客户请求的信息，直接上例子吧:&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// /user/id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/user/:id&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var userid = req.params.id; // id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;this 也可以通过req.params[0]获得id参数,req.query：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// /user?id=id001&amp;amp;name=foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/user&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var userid = req.query.id; // id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var name = req.query.name; // foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;req-param-name-这个方法和params的作用是一样的&quot;&gt;&lt;a href=&quot;#req-param-name-这个方法和params的作用是一样的&quot; class=&quot;headerlink&quot; title=&quot;req.param(name),这个方法和params的作用是一样的:&quot;&gt;&lt;/a&gt;req.param(name),这个方法和params的作用是一样的:&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// /user/id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;/user/:id&amp;apos;, function(req, res)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // var userid = req.params.id; // id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  var userid = req.param(&amp;apos;id&amp;apos;); // id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;req-route-可以获取路由的信息&quot;&gt;&lt;a href=&quot;#req-route-可以获取路由的信息&quot; class=&quot;headerlink&quot; title=&quot;req.route 可以获取路由的信息&quot;&gt;&lt;/a&gt;req.route 可以获取路由的信息&lt;/h3&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/user/:id&amp;apos;, function(req, res)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(req.route);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  通过访问 /user/12输出的结果为:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;path:&amp;apos;/user/:id?&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  keys:[&amp;#123;name: &amp;apos;id&amp;apos;, optionl: true&amp;#125;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  regexp: /^\/user(?:\/([^\/]+?))?\/?$/i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  params:[id: &amp;apos;12&amp;apos;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这些信息有时候会很有用。&lt;/p&gt;
&lt;h3 id=&quot;req-cookies&quot;&gt;&lt;a href=&quot;#req-cookies&quot; class=&quot;headerlink&quot; title=&quot;req.cookies&quot;&gt;&lt;/a&gt;req.cookies&lt;/h3&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;req.cookies.name //获取cookies信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;req-signedCookies&quot;&gt;&lt;a href=&quot;#req-signedCookies&quot; class=&quot;headerlink&quot; title=&quot;req.signedCookies&quot;&gt;&lt;/a&gt;req.signedCookies&lt;/h3&gt;&lt;p&gt;  获取签名cookies信息,党我们在cookieParser(secret) 插件应用sercret时cookie是经过签名的:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 真实cookie值是 user=leo.CP7AWaXDfAKIRfH49dQzKJx7sKzzSoPq7/AcBBRVwlI3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.signedCookies.user //可以得到抛弃签名后的cookie，即 foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;req-get-field-得到请求头部信息，field不区分大小写&quot;&gt;&lt;a href=&quot;#req-get-field-得到请求头部信息，field不区分大小写&quot; class=&quot;headerlink&quot; title=&quot;req.get(field) 得到请求头部信息，field不区分大小写&quot;&gt;&lt;/a&gt;req.get(field) 得到请求头部信息，field不区分大小写&lt;/h3&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;req.get(&amp;apos;Content-Type&amp;apos;); // =&amp;gt; &amp;apos;text/plain&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.get(&amp;apos;content-type&amp;apos;); // =&amp;gt; &amp;apos;text/plain&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  它的别名是req.header(field)&lt;/p&gt;
&lt;h3 id=&quot;req-accepts-types-检查给定的类型使可以接受的：&quot;&gt;&lt;a href=&quot;#req-accepts-types-检查给定的类型使可以接受的：&quot; class=&quot;headerlink&quot; title=&quot;req.accepts(types) 检查给定的类型使可以接受的：&quot;&gt;&lt;/a&gt;req.accepts(types) 检查给定的类型使可以接受的：&lt;/h3&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Accept: text/html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;html&amp;apos;); // =&amp;gt; &amp;apos;html&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Accept: text/* application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;html&amp;apos;); // =&amp;gt; &amp;apos;html&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;text/html&amp;apos;); // =&amp;gt; &amp;quot;text/html&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;json, text&amp;apos;);// =&amp;gt; &amp;quot;json&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;application/json&amp;apos;); // =&amp;gt; &amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Accept: text/*, application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;image/png&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;png&amp;apos;);// =&amp;gt; undefined 不允许的类型，将返回undefined&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Accept: text/*;q=.5, application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts([&amp;apos;html&amp;apos;, &amp;apos;json&amp;apos;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.accepts(&amp;apos;html, json&amp;apos;);// =&amp;gt; &amp;quot;json&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  req.acceptsCharset(charset) 检查给定的字符集是可以接受的。&lt;br&gt;  req.acceptsLanguage(lang) 检查给定语言是可以接受的。&lt;br&gt;  req.is(type)检查请求对象的内容类型，内部根据Context-Type判断。&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 如果头部信息是 Content-Type: text/html; charset=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(&amp;apos;html&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(&amp;apos;text/html&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(text/*);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 都会得到true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果请求头部信息 是 Content-Type is application/json&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(&amp;apos;json&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(&amp;apos;application/json&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(&amp;apos;application/*&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 都会得到 true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.is(html); // =&amp;gt; false&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  req.ip 获取客户端ip&lt;br&gt;  req.ips 返回代理ip和客户端ip，[‘客户ip’,’代理ip2’，’代理ip1’]&lt;br&gt;  req.path 返回请求路径&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// /user？sort=desc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.path; // =&amp;gt; /user&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  req.host 返回主机名称&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Host: &amp;apos;localhost:8080&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.host; // ==&amp;gt; &amp;apos;localhost&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Host: &amp;apos;192.168.1.101:8080&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;req.host; // ==&amp;gt; 192.168.1.101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  req.fresh 测试使用的req是否新鲜，true/false, 如果客户端没有这个资源的缓存，就说明这个请求是新鲜的，如果 fresh=false 这时我们可以调用res.status(304)，这样客户端会直接应用缓存的内容，节省了服务器的资源.&lt;br&gt;  req.stale 与req.fresh相反，测试请求req是否是陈旧的，true／false&lt;br&gt;  req.xhr 请求是否是ajax方式，true／false&lt;br&gt;  req.protocol 请求协议，http / https&lt;br&gt;  req.secure 是否为安全协议 req.protocol === “https”&lt;br&gt;  req.subdomains 得到子域名数组。 // Host: “a.book.jsera.net” req.subdomains // =&amp;gt; [“book”, “a”]&lt;br&gt;  req.originalUrl 得到完整请求地址&lt;br&gt;  req.url 这里的url是路由本身域内的：&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 访问 /user/foo/id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var router = express.Router()；&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;/:name/:id&amp;apos;, function(req, res)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(req.originalUrl); // /user/foo/id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(req.url); // /foo/id001&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/user&amp;apos;, router);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;request-是客户端请求的抽象-这个对象是只读的，它包含了客户请求的信息，直接上例子吧&quot;&gt;&lt;a href=&quot;#request-是客户端请求的抽象-这个对象是只读的，它包含了客户请求的信息，直接上例子吧&quot; class=&quot;headerlink&quot; title=&quot;re
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="Express" scheme="ty52u.cn/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Express4*路由功能③</title>
    <link href="ty52u.cn/2016/06/15/Express4-%E8%B7%AF%E7%94%B1%E5%8A%9F%E8%83%BD%E2%91%A2/"/>
    <id>ty52u.cn/2016/06/15/Express4-路由功能③/</id>
    <published>2016-06-15T13:00:54.000Z</published>
    <updated>2016-06-17T13:52:04.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;路由器、响应与渲染&quot;&gt;&lt;a href=&quot;#路由器、响应与渲染&quot; class=&quot;headerlink&quot; title=&quot;路由器、响应与渲染&quot;&gt;&lt;/a&gt;路由器、响应与渲染&lt;/h2&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//router路由器，根据 /book 知道应该用相应的handle处理器来处理这个请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router(&amp;apos;/book&amp;apos;,function handle(req, res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  req // 请求对象，记录有客户端请求的所有信息，告诉你，他要什么&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res // 响应对象，你可以通过它，把数据交给客户端&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;路由器-router&quot;&gt;&lt;a href=&quot;#路由器-router&quot; class=&quot;headerlink&quot; title=&quot;路由器(router)&quot;&gt;&lt;/a&gt;路由器(router)&lt;/h3&gt;&lt;p&gt;express 的路由器表现形式是:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//客户端通过get方式进行请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/book&amp;apos;, function router_handle(req,res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ... //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 客户段通过post请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.post(&amp;apos;/save&amp;apos;, function router_handle(req,res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ... //&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;除了post、get请求外还有 delete、put或是自己创建的方法，如果浏览器部支持，可以通过一个参数搞定:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form mothod = &amp;apos;post&amp;apos;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;input type = &amp;apos;hidden&amp;apos; name = &amp;apos;_method&amp;apos; value = &amp;apos;put&amp;apos;/&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;这样还不够，我们还需要在服务端加上一个插件(添加插件这里就不详细介绍，在上一节中有介绍过)。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var methodOverride = require(&amp;apos;method-override&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(methodOverride(&amp;apos;_method&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了提高代码的可读性很复用性可以采用express.Router类将 app.get()和app.post() 组织为更好的路由方式.如下创建一个userRouter.js&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var express = require(&amp;apos;express&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//浏览地址为localhost:port/foo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;/&amp;apos;, function(req, res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;浏览器会看到json 数据&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //浏览器会看到json 数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.send(&amp;#123;title: &amp;apos;hello world&amp;apos;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//浏览地址为localhost:port/foo/down&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;/down&amp;apos;, function(req, res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;下载数据&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //浏览器会下载.log文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.download(&amp;apos;./npm-debug.log&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//浏览地址为localhost:port/foo/render&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.put(&amp;apos;/render&amp;apos;, function(req, res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    console.log(&amp;apos;渲染index.html 文件&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //会渲染一个页面&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.render(&amp;apos;index.jade&amp;apos;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        title: &amp;apos;hello world&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;module.exports = router;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;在 app.js 中添加路由代码如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/foo&amp;apos;,require(&amp;apos;./routes/userRouter&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;一个web应用程序可能会有很多的路由，我们可以通过这中简单切换的方式来模块化路由，便于我们对每个功能的管理。&lt;/p&gt;
&lt;h3 id=&quot;页面渲染&quot;&gt;&lt;a href=&quot;#页面渲染&quot; class=&quot;headerlink&quot; title=&quot;页面渲染&quot;&gt;&lt;/a&gt;页面渲染&lt;/h3&gt;&lt;p&gt;  页面渲染也可以叫动态页面渲染，动态模版引擎有很多，最终都是要生成一个html页面，无论哪个引擎再高深，原理只有一个：“ 模版引擎的作用就是，通过把数据注入到模版中，转换一个html页面，一个模版通过给定数据的不同，生成的html页面也不相同，所以叫做动态页面。 ”&lt;br&gt;  express对页面的渲染主要有下面几种方式:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* res.send(“hello”); // 浏览器会看到hello
* res.render(“index.html”,{title:”world”});  // 会渲染一个页面
* res.download(“/my.pdf”);   // 浏览器会下载一个文件。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  还有很多方法，这里的 res.render 方法是渲染一个页面，但响应方法不只是渲染页面，可以下载,还可以只是一个字符串等等.&lt;/p&gt;
&lt;h3 id=&quot;路由处理器执行顺序&quot;&gt;&lt;a href=&quot;#路由处理器执行顺序&quot; class=&quot;headerlink&quot; title=&quot;路由处理器执行顺序&quot;&gt;&lt;/a&gt;路由处理器执行顺序&lt;/h3&gt;&lt;p&gt;  路由器的处理执行顺序和代码的先后顺序有关，如下代码:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这段代码执行后打印的是:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  其实无论我们调用的的 app.use, app.all, app.get, app.post 都是一样的按照编码顺序来执行。&lt;strong&gt;&lt;em&gt;需要注意的是&lt;/em&gt;&lt;/strong&gt;这个执行顺序的前提是 &lt;strong&gt;&lt;em&gt;一致的路由&lt;/em&gt;&lt;/strong&gt;, 一致路由其实就是相同的方法和相同的路径,如下代码:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.post(&amp;apos;/test&amp;apos;, function(req. res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这段代码就没有执行顺序可言了,因为他们请求的是不同的方法，不存在一致的路由,还有&lt;strong&gt;&lt;em&gt;需要注意&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;next&lt;/strong&gt; 方法调用之前是不会调用之后的路由处理器，如下代码:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  执行这段代码在控制台只会打印出 &lt;strong&gt;router A&lt;/strong&gt;,因为第一个路由处理器没有调用next()方法。&lt;br&gt;  如果我们想要在浏览器上看到服务器的响应,就需要调用响应方法，如: res.send(),res.render()等等，如下代码:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这样，浏览器就会显示出&lt;strong&gt;router B&lt;/strong&gt;字符串，我们发现第二个路由处理器没有调用next,因为调用next()的目的是执行之后的路由处理器，如果后面没有就不需要调用，另外 &lt;strong&gt;调用任何响应方法都表示响应任务完成&lt;/strong&gt;.如下代码:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;router A&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;router B&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;router C&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;router C&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  调用后之会在浏览器上显示 router A, 因为&lt;strong&gt;调用了任何响应方法，都表示响应的任务完成&lt;/strong&gt;，但是第二个路由处理器还是会执行，只不过所有的响应方法都不会在在起作用，调用上面这段代码在后台输出的是:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router A&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router B&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router C&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;app-all-方法&quot;&gt;&lt;a href=&quot;#app-all-方法&quot; class=&quot;headerlink&quot; title=&quot;app.all() 方法&quot;&gt;&lt;/a&gt;app.all() 方法&lt;/h3&gt;&lt;p&gt;  app.all 表示响应所有http方法,如下:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.all(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  conosle.log(&amp;apos;app.all method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  这样不论我们通过get或是post http方法访问后台终端都会打印app.all method，若用app.use替换app.all效果也一样的，但是use不支持多路由处理器，如下:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.all(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;app.all method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lonsole.log(&amp;apos;app 2&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  next();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.get(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  lonsole.log(&amp;apos;app.get method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;app.get method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.post(&amp;apos;/test&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  console.log(&amp;apos;app.post method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.send(&amp;apos;app.post method&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  执行这段代码打印的是:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.all method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  如果我们把all 改为use则会之后打印出:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.all method&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  由此可见,app.all , app.get , app.post 方法支持多路由处理链,app.use 方法部支持，但它支持执行express.Router的实例.&lt;/p&gt;
&lt;h3 id=&quot;express-Router-类&quot;&gt;&lt;a href=&quot;#express-Router-类&quot; class=&quot;headerlink&quot; title=&quot;express.Router 类&quot;&gt;&lt;/a&gt;express.Router 类&lt;/h3&gt;&lt;p&gt;  一个express.Router 的实例可以理解为一个独立的app,他调用use 方法加入中间件，但是只作用于自身。通过 var router = Express.Router(&amp;lt;可选参数&amp;gt;) 创建一个路由器对象，可选参数有两个，caseSensitive 区分大小写(如:/Foo和/foo)默认是false; strict 严格路由(如: /foo和/foo/)默认false关闭。创建方式如下:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;foo&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.send(&amp;apos;abcdefg&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/user&amp;apos;, router);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  我们通过 /user/foo可以访问，通过app.use 方法加入到应用程序的路由链上。如下我们程序用用到的模块:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/user&amp;apos;, require(&amp;apos;./user&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;book&amp;apos;, require(&amp;apos;./user&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  当然， 它自身的use方法也可以应用其他router,如下:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var sub = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sub.get(&amp;apos;/sub&amp;apos;, function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;res.send(&amp;apos;sub is me&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.use(&amp;apos;foo&amp;apos;, sub);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/user&amp;apos;, router);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;  通过访问 /user/foo/sub 可以访问到，但实际应用中不会这么做.&lt;br&gt;  还有就是app 的Router对象是支持糖衣写法的:&lt;br&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;router.route(&amp;apos;/users/:user_id&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.all(function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).get(function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).post(function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).delete(function(req, res, next)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;泛式路由&quot;&gt;&lt;a href=&quot;#泛式路由&quot; class=&quot;headerlink&quot; title=&quot;泛式路由&quot;&gt;&lt;/a&gt;泛式路由&lt;/h2&gt;&lt;p&gt;  /user/id 这是明确路由，而 /user/:id 和/user/&lt;em&gt; 都属于泛式路由.&lt;br&gt;  /user/:id 这个路由通过，user/id 都可访问到。&lt;br&gt;  /user/:id? 这个路由通过，/user 和 user/id 都可访问到。&lt;br&gt;  /user/&lt;/em&gt; 这个路由通过，/user 和 user/id 都可访问到。&lt;br&gt;  /user/&lt;em&gt;/id?  这个路由通过，/user 和 user/id001 和 user/xxx/id001都可访问到。&lt;br&gt;  /user/&lt;/em&gt;/:id  这个路由通过， user/id001 和 user/xxx/id001都可访问到。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;路由器、响应与渲染&quot;&gt;&lt;a href=&quot;#路由器、响应与渲染&quot; class=&quot;headerlink&quot; title=&quot;路由器、响应与渲染&quot;&gt;&lt;/a&gt;路由器、响应与渲染&lt;/h2&gt;  &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="Express" scheme="ty52u.cn/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>Express4.*配置说明②</title>
    <link href="ty52u.cn/2016/06/15/Express4-%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E%E2%91%A1/"/>
    <id>ty52u.cn/2016/06/15/Express4-配置说明②/</id>
    <published>2016-06-15T11:50:59.000Z</published>
    <updated>2016-06-17T01:55:57.000Z</updated>
    
    <content type="html">&lt;p&gt;Express 可以通过在app.js文件中添加(或是修改默认)配置来实现更好的应用。&lt;/p&gt;
&lt;h3 id=&quot;基本的配置说&quot;&gt;&lt;a href=&quot;#基本的配置说&quot; class=&quot;headerlink&quot; title=&quot;基本的配置说&quot;&gt;&lt;/a&gt;基本的配置说&lt;/h3&gt;&lt;p&gt;  app.set(key,value) 可以配置web应用程序，通过app.get(key) 可以得到值，如下配置:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 设置动态页目录
  app.set(&amp;apos;views&amp;apos;, path.join(__dirname, &amp;apos;views&amp;apos;));
2. 设置动态模版引擎，这里用的是默认的jade引擎，还可以选其他的如 Haml,Jade,EJS,CoffeeKup 等等
  app.set(&amp;apos;view engine&amp;apos;, &amp;apos;jade&amp;apos;);
3. env 运行时的环境，默认为process.env.NODE_DEV 或是 ‘development’
4. trust proxy 激活反向代理，默认未激活状态
5. jsonp callback name 修改默认 ？callback=的jsonp回调的名称
6. json replacer JSON replacer 替换时的回调，默认为null
7. JSON spaces JSON响应的空格数量，开发环境下是 2， 生产环境下是 0
8. case sensitive routing 理由的大小写敏感，默认是关闭状态即 &amp;apos;/Foo&amp;apos; 和&amp;apos;/foo&amp;apos; 效果是一样的
9. strict routing 路由的严格模式，默认情况小&amp;apos;/foo&amp;apos; 和&amp;apos;/foo/&amp;apos; 是一样的
10. view cache 模板缓存，在生产环境中默认是开启的
11. view engine 模板引擎
12. views 模板的目录,默认的是 &amp;apos;process。cwd() + ./views&amp;apos;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;配置加载中间件&quot;&gt;&lt;a href=&quot;#配置加载中间件&quot; class=&quot;headerlink&quot; title=&quot;配置加载中间件&quot;&gt;&lt;/a&gt;配置加载中间件&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过app.use()方法配置可以加入中间件,扩展web应用程序的功能，自己也可以方便的开发中间件。express默认配置的中间件有:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(favicon());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(logger(&amp;apos;dev&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.json());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.urlencoded());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(cookieParser());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(path.join(__dirname, &amp;apos;public&amp;apos;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;可以通过app.use()实现多个静态目录的配置,加载顺序会先从public目录找，如果没有找到再去查找test目录。&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(path.join(__dirname, &amp;apos;public&amp;apos;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(path.join(__dirname, &amp;apos;test&amp;apos;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;模版引擎的配置&quot;&gt;&lt;a href=&quot;#模版引擎的配置&quot; class=&quot;headerlink&quot; title=&quot;模版引擎的配置&quot;&gt;&lt;/a&gt;模版引擎的配置&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;通过调用app.engine(‘haml’,engine.haml);这样就可以对特定扩张名的动态模板文件进行解析，如:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var engines = require(&amp;apos;consolidate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.engine(&amp;apos;haml&amp;apos;, engines.haml);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.engine(&amp;apos;html&amp;apos;, engines.hogan);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
consolidate 是一个库，可以铺平各个引擎集成到express差异性，因为并不是每个第三方引擎都遵守约定，所以consolidate起到中间翻译的作用，&lt;strong&gt;&lt;em&gt;需要注意&lt;/em&gt;&lt;/strong&gt; app.engine和app.set(‘view engine’, ‘ejs’) 之间的关系可以理解为你想改变对不同扩展名的动态模板进行解析，就要用到app.engine,就像下面的情况:&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var engines = require(&amp;apos;consolidate&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.set(&amp;apos;view engine&amp;apos;, &amp;apos;html&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.engine(&amp;apos;html&amp;apos;, engines.jade);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
模版引擎采用了html引擎，这个很奇怪，其实是由于 app.engine(‘html’, engines.jade); 这段代码注册了 html 引擎，而实际的解析是采用 jade 解析，就形成了可以对html扩展名文件进行解析，采用的解析方式是 jade.&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Express 可以通过在app.js文件中添加(或是修改默认)配置来实现更好的应用。&lt;/p&gt;
&lt;h3 id=&quot;基本的配置说&quot;&gt;&lt;a href=&quot;#基本的配置说&quot; class=&quot;headerlink&quot; title=&quot;基本的配置说&quot;&gt;&lt;/a&gt;基本的配置说&lt;/h3&gt;&lt;p&gt;  a
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="Express" scheme="ty52u.cn/tags/Express/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu常用基本命令</title>
    <link href="ty52u.cn/2016/06/15/ubuntu%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>ty52u.cn/2016/06/15/ubuntu常用基本命令/</id>
    <published>2016-06-15T06:05:39.000Z</published>
    <updated>2016-06-21T10:19:13.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;创建桌面图标&quot;&gt;&lt;a href=&quot;#创建桌面图标&quot; class=&quot;headerlink&quot; title=&quot;创建桌面图标&quot;&gt;&lt;/a&gt;创建桌面图标&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gnome-desktop-item-edit /usr/share/applications --create-new &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装-deb文件&quot;&gt;&lt;a href=&quot;#安装-deb文件&quot; class=&quot;headerlink&quot; title=&quot;﻿安装 .deb文件&quot;&gt;&lt;/a&gt;﻿安装 .deb文件&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; $ sudo passwd root 修改root密码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo dpkg -i package_file.deb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装最新的-git&quot;&gt;&lt;a href=&quot;#安装最新的-git&quot; class=&quot;headerlink&quot; title=&quot;安装最新的 git&quot;&gt;&lt;/a&gt;安装最新的 git&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo add-apt-repository ppa:git-core/ppa //安装git 的源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装-nodejs版本管理工具&quot;&gt;&lt;a href=&quot;#安装-nodejs版本管理工具&quot; class=&quot;headerlink&quot; title=&quot;安装 nodejs版本管理工具&quot;&gt;&lt;/a&gt;安装 nodejs版本管理工具&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; $ sudo wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.1/install.sh | bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ source ~/.bashrc&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;安装mysql&quot;&gt;&lt;a href=&quot;#安装mysql&quot; class=&quot;headerlink&quot; title=&quot;安装mysql&quot;&gt;&lt;/a&gt;安装mysql&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改mysql配置:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;/etc/mysql/mysql.conf.d/mysqld.conf 添加  character-set-server=utf8 ，将bind-address=0.0.0.0&lt;/li&gt;
&lt;li&gt;/etc/mysql/conf.d/mysql.conf 添加  default-sourcharacter-set=utf8&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;查看系统进程操作&quot;&gt;&lt;a href=&quot;#查看系统进程操作&quot; class=&quot;headerlink&quot; title=&quot;查看系统进程操作&quot;&gt;&lt;/a&gt;查看系统进程操作&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ ps -aux|grep &amp;lt;进程名称&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ netstat -nlt|grep &amp;lt;端口号&amp;gt; //查看端口状态&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ kill -9 &amp;lt;进程号&amp;gt; // 关掉进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建桌面图标&quot;&gt;&lt;a href=&quot;#创建桌面图标&quot; class=&quot;headerlink&quot; title=&quot;创建桌面图标&quot;&gt;&lt;/a&gt;创建桌面图标&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="ubuntu" scheme="ty52u.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Git基本操作详解</title>
    <link href="ty52u.cn/2016/06/15/Git%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E8%AF%A6%E8%A7%A3/"/>
    <id>ty52u.cn/2016/06/15/Git基本操作详解/</id>
    <published>2016-06-15T03:27:58.000Z</published>
    <updated>2016-06-15T03:46:34.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;基础学习&quot;&gt;&lt;a href=&quot;#基础学习&quot; class=&quot;headerlink&quot; title=&quot;基础学习&quot;&gt;&lt;/a&gt;基础学习&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1. git init    初始化
2. git add &amp;lt;filename&amp;gt; 添加文件到本地仓库  (把文件添加进去，实际上就是把文件修改添加到暂存区)
3. git commit -m &amp;apos;&amp;lt;DESC&amp;gt;&amp;apos; 将添加好的文件提交到本地仓库 (把暂存区的所有内容提交到当前分支)
4. git log 查看commit 日志
5. git log --pretty=oneline 以行的形式显示日子
6. git rest --hard HEAD^ 回滚到上一个版本
7. git reset --hard &amp;lt;版本号&amp;gt; 回滚到该版本(可以往前回滚也可以往后回滚)
8. git reflog 记录每一次命令，查看命令历史，以便确定要回到未来的哪个版本(可以用这个命令早点每次操作的版本号)
9. git checkout -- &amp;lt;文件名&amp;gt; 文件在工作区的修改全部撤销 (
    一种是 该文件 自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
    一种是 该文件 已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
  )
10. git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令，我们在后面的分支管理中会再次遇到git checkout命令
11. git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
12. git rm &amp;lt;文件名&amp;gt; 用于删除一个文件
13. git remote add origin git@github.com:michaelliao/learngit.git 关联远程仓库(用ssh公钥的情况)
14. git push -u origin master 推送数据到远程仓库(第一次推送数据需要加上  -u , master 最新改动需要推送的分支)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;git的分支应用&quot;&gt;&lt;a href=&quot;#git的分支应用&quot; class=&quot;headerlink&quot; title=&quot;git的分支应用&quot;&gt;&lt;/a&gt;git的分支应用&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1. git checkout -b dev 创建 dev分支 并切换到该分支 (-b 参数表示创建并切换)
2. git branch 列出所有分支，当前分支前面会标一个*号
3. git merge dev 合并指定分支[dev]到当前分支
4. git branch -d dev 删除 指定分支[dev]
5. git checkout master 切换到指定分支[master]
6. git log --graph 查看到分支合并图
7. git log --graph --pretty=oneline --abbrev-commit 看到分支的合并情况
8. git merge --no-ff -m &amp;quot;merge with no-ff&amp;quot; dev 强制禁用Fast forward模式合并分支(-m参数，把commit描述写进去)
9. git stash “储藏”当前工作现场
10. git stash list 查看被储存的工作现场
11. 恢复储存现场
  1. git stash apply 恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除
  2. git stash pop，恢复的同时把stash内容也删了
  3. git stash apply stash@{0} 恢复到指定储存记录
12. git branch -D &amp;lt;name&amp;gt; 强行删除一个没有被合并过的分支&amp;lt;name&amp;gt;
13. git remote 查看远程仓库
14. git remote -v 查看远程仓库 详细信息
15. git push origin master 推送分支到远程仓库上 被推送的分支为 master
16. git checkout -b dev origin/dev 创建远程origin的dev分支到本地
17. git pull 抓取最新的数据
18. 多人协作的工作模式通常是这样：
  1. 首先，可以试图用git push origin branch-name推送自己的修改
  2. 如果推送失败，则因为远程分支比你的本地更新，需要先用git pull试图合并
  3. 如果合并有冲突，则解决冲突，并在本地提交
  4. 没有冲突或者解决掉冲突后，再用git push origin branch-name推送就能成功
  5. 如果git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建，用命令git branch --set-upstream branch-name origin/branch-name
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;标签管理-tag&quot;&gt;&lt;a href=&quot;#标签管理-tag&quot; class=&quot;headerlink&quot; title=&quot;标签管理(tag)&quot;&gt;&lt;/a&gt;标签管理(tag)&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1. git tag v1.0 打上一个name为 v1.0的标签, 默认为HEAD，也可以指定一个commit id
2. git tag 查看标签
3. git tag v0.9 6224937 在历史版本号为&amp;lt;6224937&amp;gt; 打上标签
4. git show &amp;lt;tagname&amp;gt;查看标签信息
5. git tag -a v0.1 -m &amp;apos;version 0.1 released&amp;apos; ddcb78c  创建带有说明的标签，用-a指定标签名，-m指定说明文字 &amp;lt;ddcb78c 表示版本号&amp;gt;
6. git tag -d v0.1 删除标签为 v0.1
7. git push origin v1.0 推送标签到远程仓库上
8. git push origin --tags 一次推送所有标签到远程仓库
9. 删除远程仓库的标签
  1. git tag -d v0.9
  2. git push origin :refs/tags/v0.9
10. git add -f &amp;lt;filename&amp;gt; 强制添加被gitignore忽略的文件到git
11. git check-ignore -v &amp;lt;filename&amp;gt; 检查.gitignore文件哪个规则出错
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;基础学习&quot;&gt;&lt;a href=&quot;#基础学习&quot; class=&quot;headerlink&quot; title=&quot;基础学习&quot;&gt;&lt;/a&gt;基础学习&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;1. git init    初始化
2. git add &amp;lt;filename&amp;gt; 添加文件到本地
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="Git" scheme="ty52u.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Express 4.* 简单学习了解①</title>
    <link href="ty52u.cn/2016/06/14/Express%204-%E7%AE%80%E5%8D%95%E5%AD%A6%E4%B9%A0%E4%BA%86%E8%A7%A3%E2%91%A0/"/>
    <id>ty52u.cn/2016/06/14/Express 4-简单学习了解①/</id>
    <published>2016-06-14T06:22:00.000Z</published>
    <updated>2016-06-17T01:56:03.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;安装和使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为express4.*后的版本要安装express只是安装express的命令程序(用于生成express应用程序的工具),并不是express库,如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g express-generator  // -g 表示安装成全局的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;查看是否安装成功:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ express -V //大写的V 查看express 的版本号&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;快速开发&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;建立一个express项目，并进入到项目目录:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ express nodejs-express &amp;amp; cd nodejs-express&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;进入项目目录后安装依赖模块:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;启动项目:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;程序目录介绍&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;app.js 主程序&lt;/li&gt;
&lt;li&gt;node_modules 依赖模块包&lt;/li&gt;
&lt;li&gt;views 动态页目录&lt;/li&gt;
&lt;li&gt;public 静态网页目录&lt;/li&gt;
&lt;li&gt;bin 启动程序(bin/www)&lt;/li&gt;
&lt;li&gt;package.json npm命令对项目初始化产生的描述项目的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动程序是 bin/www介绍:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var debug = require(&amp;apos;debug&amp;apos;)(&amp;apos;nodejs-express&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 加载主程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var app = require(&amp;apos;../app&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//如果不没有指定服务器监听端口号，默认使用3000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.set(&amp;apos;port&amp;apos;, process.env.PORT || 30000);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 启动程序，开始监听客户端请求&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var server = app.listen(app.get(&amp;apos;port&amp;apos;), function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  debug(&amp;apos;Express server listening on port &amp;apos; + server.address().port);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;可以通过命令指定一个启动端口号:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ PORT=8000 npm start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;app.js主程序关键代码说明:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 创建应用程序&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var app = express();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置动态页目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.set(&amp;apos;views&amp;apos;, path.join(__dirname, &amp;apos;views&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 设置动态页模版引擎&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.set(&amp;apos;view engine&amp;apos;, &amp;apos;jade&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 中间件加载，这里不多说，之后章节会详细介绍&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(favicon());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(logger(&amp;apos;dev&amp;apos;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.json());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(bodyParser.urlencoded());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(cookieParser());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 指定静态页目录&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(express.static(path.join(__dirname, &amp;apos;public&amp;apos;)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 加载路由处理器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/&amp;apos;, routes);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(&amp;apos;/users&amp;apos;, users);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果有任何错误都会设置成 404错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(function(req, res, next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    var err = new Error(&amp;apos;Not Found&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    err.status = 404;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    next(err);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果环境设置成 开发模式，那么会打印出详细的错误信息&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (app.get(&amp;apos;env&amp;apos;) === &amp;apos;development&amp;apos;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    app.use(function(err, req, res, next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.status(err.status || 500);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res.render(&amp;apos;error&amp;apos;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            message: err.message,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            error: err&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 生产模式下，不会泄漏error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;app.use(function(err, req, res, next) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.status(err.status || 500);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.render(&amp;apos;error&amp;apos;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        message: err.message,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        error: &amp;#123;&amp;#125;  // 不会泄漏error&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;routes/index.js  注释说明:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;var express = require(&amp;apos;express&amp;apos;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//创建一个路由器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var router = express.Router();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 添加路由出来器，也就是为‘/’请求路由加入处理器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 当有人访问时会执行这个函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * req 是请求对象, res 是响应对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;router.get(&amp;apos;/&amp;apos;, function(req, res) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 调用响应对象的render返回给客户端一个响应结果&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  // 这个响应结果是由动态页面 views/index.jade 生成&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  res.render(&amp;apos;index&amp;apos;, &amp;#123;title: &amp;apos;Express&amp;apos;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;module.exports = router;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;安装和使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为express4.*后的版本要安装express只是安装express的命令程序(用于生成express应用程序的工具),并不是express库,如下:&lt;br&gt;&lt;figure class=&quot;highlight 
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="nodejs" scheme="ty52u.cn/tags/nodejs/"/>
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="express4.*" scheme="ty52u.cn/tags/express4/"/>
    
  </entry>
  
  <entry>
    <title>新的开始</title>
    <link href="ty52u.cn/2016/06/13/%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>ty52u.cn/2016/06/13/新的开始/</id>
    <published>2016-06-13T08:22:00.000Z</published>
    <updated>2016-07-04T09:05:04.000Z</updated>
    
    <content type="html">&lt;p&gt;这是&lt;strong&gt;新的开始&lt;/strong&gt;, 我用hexo创建了第一篇文章.&lt;/p&gt;
&lt;p&gt;通过下面的命令,就可以创建新的文章:&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &amp;lt;文章名称&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;INFO  Created: ~/文档/前端开发工作区/nodejs-hexo-blog/source/_posts/新的开始.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;感觉非常安逸.&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Every interaction is both precious and an opportunity to delight.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Seth Godin&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Welcome to Island Marketing&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;figcaption&gt;&lt;span&gt;.compact&lt;/span&gt;&lt;a href=&quot;http://underscorejs.org/#compact&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Underscore.js&lt;/a&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.compact([0, 1, false, 2, ‘’, 3]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&amp;gt; [1, 2, 3]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;a href=&quot;http://blog.fens.me&quot; title=&quot;粉丝日志&quot; target=&quot;_blank&quot;&gt;粉丝日志&lt;/a&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;img src=&quot;/images/2016-06-13.png&quot; width=&quot;400&quot; height=&quot;600&quot; title=&quot;这是一张图片&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是&lt;strong&gt;新的开始&lt;/strong&gt;, 我用hexo创建了第一篇文章.&lt;/p&gt;
&lt;p&gt;通过下面的命令,就可以创建新的文章:&lt;br&gt;    &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
    
    </summary>
    
      <category term="日志" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/"/>
    
      <category term="笔记" scheme="ty52u.cn/categories/%E6%97%A5%E5%BF%97/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="我的Blog" scheme="ty52u.cn/tags/%E6%88%91%E7%9A%84Blog/"/>
    
      <category term="开始" scheme="ty52u.cn/tags/%E5%BC%80%E5%A7%8B/"/>
    
      <category term="日记" scheme="ty52u.cn/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
</feed>
